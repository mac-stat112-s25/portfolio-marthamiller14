---
title: "Exam 2"
editor: visual
execute:
  echo: true
  warning: false
  error: false

format: 
  html: 
    code-fold: true
---

```{r}
library(tidyverse)
fc <- read_csv("../data/food_consumption.csv")
```

```{r}
library(tidytuesdayR)
library(rnaturalearth)
library(sf)
```

```{r}
str(fc)
head(fc)
```

```{r}
fc |>
  select(food_category)
```

```{r}
fcc <- fc |>
  mutate(food_category = case_when (
    food_category == "Lamb & Goat" ~ "Lamb",
     food_category == "Milk - inc. cheese" ~ "Dairy",
     food_category == "Wheat and Wheat Products" ~ "Wheat",
     food_category == "Nuts inc. Peanut Butter" ~ "Nuts",
    TRUE ~ food_category
  ))

head(fcc,11)
```

```{r}
#cc <- fc |>
 # group_by(country) |>
  #summarise(total_consumption = sum(consumption, na.rm = TRUE)) |>
  #arrange(desc(total_consumption)) |>

#print(cc)
```

```{r}
#| fig-height: 25 
#| fig-width: 10
#|fig_cap: "Faceted maps showing global food consumption by each category of food. There are 11 categories of food. It shows that the milk and cheese category has byfar the most consumed. "

#|fig_alt: "A facet wrapped map showing global food consumption. Maps are faceted by each food category on a map showing the world. Lighter areas on the map represent a greater kg/person/year for each food category. Data is "food_consumption.csv".

world <- ne_countries(scale = "medium", returnclass = "sf")

food_by_country_category <- fc|>
  group_by(country, food_category) |>
  summarise(total_consumption = sum(consumption, na.rm = TRUE)) |>
  ungroup()

map_data <- world |>
  left_join(food_by_country_category, by = c("name" = "country"))

ggplot(map_data) +
  geom_sf(aes(fill = total_consumption), color = "gray70", size = 0.1) +
  scale_fill_viridis_c(option = "C", na.value = "lightgray") +
  facet_wrap(~ food_category, ncol= 2) +
  labs(
    title = "Global Food Consumption by Category",
    fill = "kg/person/year", caption= "Data from: TidyTuesday Github Repository, Created by: Martha Miller, Date: 02/23/2025"
  ) +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 10),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )  

```
