[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n1  Univariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary (maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary (RColorBrewer)\nlibrary (gplots)\n\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\n\nLoading required package: usethis\n\nlibrary(ggthemes)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\n\n\nsurvey&lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\n\n#|fig-cap: \"This figure shows the favorite temperature *in degrees Celcius* that students in the STATS 112 course have. The greater the frequency (y-axis) means the greater number of students that like the same temperature.\"\"\n\n#|fig_alt: \"This visualization is of a bar graph that represents students' favorite temperature in degrees Celcius. The biggest takeaway is that students most like the temperature between `15-25 degrees. Data from class survey- https://hash-mac.github.io/stat112site-s25/data/survey.csv\"\n\nggplot(survey, aes(x=fav_temp_c,))+\n  geom_bar(alpha= 0.75, width=2,fill=\"black\", color=\"white\")+\n  labs(x=\"Temperature (C)\", y=\"Frequency\", title= \"STAT 112 Students' Favorite Temperature\")\n\nWarning: `position_stack()` requires non-overlapping x intervals.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n2  Bivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary (maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary (RColorBrewer)\nlibrary (gplots)\n\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\n\nLoading required package: usethis\n\nlibrary(ggthemes)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\n\n\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n\n#|fig-cap: \"This figure shows the relationship between the Republican vote percentage in 2016 and 2020. The x-axis represents the 2016 votes and the y-axis represents the 2020 votes.\"\n\n#|fig_alt: \"This visualization is of a scatter plot of republican vote percentage in 2016 and 2020. The biggest takeaway is that the two variables are have strong positive correlation. Data from elections-https://mac-stat.github.io/data/election_2020_county.csv\"\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()+\n  labs(x=\"Republican % Vote (2016)\", y=\"Republican % Vote (2020)\", title= \"Relationship between Republican Vote %\")+\nscale_color_viridis_d()\n\n\n\n\n\n\n\n\n\n\n\n\n:::{#quarto-navigation-envelope .hidden}\n[Martha Miller]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar-title\"}\n[COMP/STAT112 Notebook]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-navbar-title\"}\n[&lt;span class='chapter-number'&gt;3&lt;/span&gt;  &lt;span class='chapter-title'&gt;Trivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-next\"}\n[&lt;span class='chapter-number'&gt;1&lt;/span&gt;  &lt;span class='chapter-title'&gt;Univariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-prev\"}\n[Welcome]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/index.htmlWelcome\"}\n[Best Work]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"}\n[&lt;span class='chapter-number'&gt;1&lt;/span&gt;  &lt;span class='chapter-title'&gt;Univariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/bw/bw-uni.html&lt;span-class='chapter-number'&gt;1&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Univariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;2&lt;/span&gt;  &lt;span class='chapter-title'&gt;Bivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/bw/bw-bi.html&lt;span-class='chapter-number'&gt;2&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Bivariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;3&lt;/span&gt;  &lt;span class='chapter-title'&gt;Trivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/bw/bw-tri.html&lt;span-class='chapter-number'&gt;3&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Trivariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;4&lt;/span&gt;  &lt;span class='chapter-title'&gt;Quadvariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/bw/bw-quad.html&lt;span-class='chapter-number'&gt;4&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Quadvariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;5&lt;/span&gt;  &lt;span class='chapter-title'&gt;Spatial Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/bw/bw-spatial.html&lt;span-class='chapter-number'&gt;5&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Spatial-Viz&lt;/span&gt;\"}\n[In-class Activities]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"}\n[&lt;span class='chapter-number'&gt;6&lt;/span&gt;  &lt;span class='chapter-title'&gt;Univariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/ica/ica-uni.html&lt;span-class='chapter-number'&gt;6&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Univariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;7&lt;/span&gt;  &lt;span class='chapter-title'&gt;Bivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/ica/ica-bi.html&lt;span-class='chapter-number'&gt;7&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Bivariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;8&lt;/span&gt;  &lt;span class='chapter-title'&gt;Mulivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/ica/ica-multi.html&lt;span-class='chapter-number'&gt;8&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Mulivariate-Viz&lt;/span&gt;\"}\n[&lt;span class='chapter-number'&gt;9&lt;/span&gt;  &lt;span class='chapter-title'&gt;Spatial Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-int-sidebar:/ica/ica-spatial.html&lt;span-class='chapter-number'&gt;9&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Spatial-Viz&lt;/span&gt;\"}\n[Best Work]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-breadcrumbs-Best-Work\"}\n[&lt;span class='chapter-number'&gt;2&lt;/span&gt;  &lt;span class='chapter-title'&gt;Bivariate Viz&lt;/span&gt;]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-breadcrumbs-&lt;span-class='chapter-number'&gt;2&lt;/span&gt;--&lt;span-class='chapter-title'&gt;Bivariate-Viz&lt;/span&gt;\"}\n:::\n\n\n\n:::{#quarto-meta-markdown .hidden}\n[[2]{.chapter-number}  [Bivariate Viz]{.chapter-title} – COMP/STAT112 Notebook]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-metatitle\"}\n[[2]{.chapter-number}  [Bivariate Viz]{.chapter-title} – COMP/STAT112 Notebook]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-twittercardtitle\"}\n[[2]{.chapter-number}  [Bivariate Viz]{.chapter-title} – COMP/STAT112 Notebook]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-ogcardtitle\"}\n[COMP/STAT112 Notebook]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-metasitename\"}\n[]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-twittercarddesc\"}\n[]{.hidden .quarto-markdown-envelope-contents render-id=\"quarto-ogcardddesc\"}\n:::\n\n\n\n\n&lt;!-- --&gt;\n\n::: {.quarto-embedded-source-code}\n```````````````````{.markdown shortcodes=\"false\"}\n---\ntitle: \"Bivariate Viz\"\n---\n\nUse this file to generate a professional looking **bivariate** visualization.  The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\nquarto-executable-code-5450563D\n\n```r\nlibrary(tidyverse)\nlibrary (sf)\nlibrary (maps)\nlibrary (RColorBrewer)\nlibrary (gplots)\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\nlibrary(ggthemes)\nlibrary(viridis)\nquarto-executable-code-5450563D\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\nquarto-executable-code-5450563D\n#|fig-cap: \"This figure shows the relationship between the Republican vote percentage in 2016 and 2020. The x-axis represents the 2016 votes and the y-axis represents the 2020 votes.\"\n\n#|fig_alt: \"This visualization is of a scatter plot of republican vote percentage in 2016 and 2020. The biggest takeaway is that the two variables are have strong positive correlation. Data from elections-https://mac-stat.github.io/data/election_2020_county.csv\"\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()+\n  labs(x=\"Republican % Vote (2016)\", y=\"Republican % Vote (2020)\", title= \"Relationship between Republican Vote %\")+\nscale_color_viridis_d()\n\n:::",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n3  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary (maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary (RColorBrewer)\nlibrary (gplots)\n\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\n\nLoading required package: usethis\n\nlibrary(ggthemes)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\n\n\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))  \n\n\n#|fig-cap: \"This figure shows the relationship between the temperature at 9:00 AM and 3:00 PM in the 3 locations; Hobart, Uluru, and Wollogong. The x-axis shows the temperature at 3:00 pm, y-axis shows the temperature at 9:00 am, and the colors differentiate the location.\" \n\n#|fig_alt: \" This visualization is a scatter plot with 3 different colors that represent each location and their correlating temperatures. The biggest takeaways are that the there is a medium/strong and positive relationship in all of the locations, and that Uluru has typically the greatest temperatures. The data is from weather-https://mac-stat.github.io/data/weather_3_locations.csv\"\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point(alpha=0.5)+\n  labs(x=\"Temperature at 3:00 PM\", y=\"Temperature at 9:00 AM\", color=\"Location\",title=\"Comparing Temperatures of Different Times of the Day in Locations\")+\n  scale_color_viridis_d()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n4  Quadvariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary (sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary (maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary (RColorBrewer)\nlibrary (gplots)\n\n\nAttaching package: 'gplots'\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\n\nLoading required package: usethis\n\nlibrary(ggthemes)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\n\n\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))  \n\n\n#|fig_cap: \"Temperature readings at 3:00 AM and 9:00 AM across multiple locations, with indications of whether rainfall occurred. The graph highlights temperature variations and potential correlations with rainfall.\"\n\n#|fig_alt: \"A scatter plot displaying temperature readings at 3:00 AM and 9:00 AM for multiple locations, with additional data indicating whether it rained. The x-axis temperature at 9:00 AM, while the y-axis shows temperature values at 3:00 PM. Different shapes distinguish rainy and non-rainy conditions, illustrating potential trends in temperature shifts due to precipitation. The biggest takeaways are that the there is a medium/strong and positive relationship in all of the locations, and that Uluru has typically the greatest temperatures. Additionally, there seems to be more rain in hobart than the other two locations. The data is from weather-https://mac-stat.github.io/data/weather_3_locations.csv\"\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point(alpha=0.5)+\nlabs(y=\"Temperature at 3:00 PM\", x=\"Temperature at 9:00 AM\", color=\"Location\", shape=\"Rain\", title=\"Temperature Variations and Rainfall by Location at 3:00 AM and 9:00 AM\")+\n  scale_color_viridis_d()\n\nWarning: Removed 69 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n5  Spatial Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary (sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary (maps)\nlibrary (RColorBrewer)\nlibrary (gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nlibrary(socviz)\nlibrary (leaflet)\nlibrary (devtools)\n\nLoading required package: usethis\n\nlibrary(ggthemes)\n\n\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Check and rename if necessary\nstarbucks &lt;- starbucks %&gt;%\n  rename_all(tolower)  # Converts all column names to lowercase\n\n# Use the correct column name\nstarbucks %&gt;%\n  filter(country == \"US\", state.province == \"MN\")  # Adjust based on actual column name\n\n        brand store.number                          store.name ownership.type\n1   Starbucks 16960-177066             Target Alexandria T-821       Licensed\n2   Starbucks  76316-95687               Target Andover T-2025       Licensed\n3   Starbucks 25535-241231       Round Lake Blvd and Northdale  Company Owned\n4   Starbucks  72682-76602    Super Target Apple Valley ST-643       Licensed\n5   Starbucks 76896-121294 Super Target Apple Vly South ST-239       Licensed\n6   Starbucks 21376-209526 Lexington and Red Fox - Arden Hills  Company Owned\n7   Starbucks 15516-156753                 Target Baxter T-659       Licensed\n8   Starbucks 11880-106241       Hwy 371 and Woida Road-Baxter  Company Owned\n9   Starbucks 17378-177052               Target Bemidji T-657.       Licensed\n10  Starbucks  76115-88842         Super Target Blaine ST-1832       Licensed\n11  Starbucks 20107-189627           109th and Hwy 65 - Blaine  Company Owned\n12  Starbucks 26122-243619                  MOA 3rd Floor C310  Company Owned\n13  Starbucks   2578-36339        98th and Lyndale-Bloomington  Company Owned\n14  Starbucks  10077-98295                  Mall of America II  Company Owned\n15  Starbucks   2705-84660     164 E. Broadway - 1st level MOA  Company Owned\n16  Starbucks     2220-665          Southtown - I-494 and Penn  Company Owned\n17    Teavana 28432-249726           Teavana - Mall of America  Company Owned\n18  Starbucks  76187-88840              Target Bloomington T-5       Licensed\n19  Starbucks   9605-97352  Brooklyn Ctr-Brooklyn Blvd. & 55th  Company Owned\n20  Starbucks  76133-88561          Target Brooklyn Park T-693       Licensed\n21  Starbucks 21555-204764                 Target North Campus       Licensed\n22  Starbucks 47126-254733        Hy Vee @ Brooklyn Park Kiosk       Licensed\n23  Starbucks 48065-254734               Hyvee @ Brooklyn Park       Licensed\n24  Starbucks  76224-90369                Target Buffalo T-861       Licensed\n25  Starbucks 76809-110952     Super Target Burnsville ST-2340       Licensed\n26    Teavana 28371-249964         Teavana - Burnsville Center  Company Owned\n27  Starbucks 23397-220084              CR 42 and Burnhaven Dr  Company Owned\n28  Starbucks 48164-261724       Cambridge - Hwy 95 and Hwy 65  Company Owned\n29  Starbucks 23160-226966    Hwy 169 and Elm Creek - Champlin  Company Owned\n30  Starbucks  76112-88843       Super Target Champlin ST-1831       Licensed\n31  Starbucks  2450-198665          Chanhassen - Dakota Ave II  Company Owned\n32  Starbucks 20793-208085             Target Chanhassen T-862       Licensed\n33  Starbucks  72649-48359         Super Target Chaska ST-1352       Licensed\n34  Starbucks 23669-232351           Target Coon Rapids T-1144       Licensed\n35  Starbucks  10743-99776          Coon Rapids-Foley & Hwy 10  Company Owned\n36  Starbucks  76206-88844              Target Northtown T-820       Licensed\n37  Starbucks   9479-96696      Cottage Grove-E. Point Douglas  Company Owned\n38  Starbucks 20345-204770          Target Cottage Grove T-662       Licensed\n39  Starbucks 22725-223764     Bass Lake Rd & Broadway-Crystal  Company Owned\n40  Starbucks 15514-141825                   Target Duluth T-4       Licensed\n41    Teavana 28464-250041          Teavana - Miller Hill Mall  Company Owned\n42  Starbucks 21634-213712          Woodland Ave & College St.  Company Owned\n43  Starbucks   2733-88041           1405 Miller Trunk Highway  Company Owned\n44  Starbucks   9711-98049             Duluth - Superior & 4th  Company Owned\n45  Starbucks   2619-53139             2040 Cliff Road - Eagan  Company Owned\n46  Starbucks   2469-14451                       Eagan Station  Company Owned\n47  Starbucks 47509-257827                Hy Vee - Eagan #1165       Licensed\n48  Starbucks 70341-140691                  Kowalski's - Eagan       Licensed\n49  Starbucks 20688-204064   Cedar & Hwy 13-TC Premium Outlets  Company Owned\n50  Starbucks    2366-7808  Hwy 169 and Anderson Lakes Parkway  Company Owned\n51  Starbucks    2325-2482            582 Prairie Center Drive  Company Owned\n52  Starbucks 26250-243426                    62 and Shady Oak  Company Owned\n53    Teavana 28331-250065       Teavana - Eden Prairie Center  Company Owned\n54  Starbucks   2599-47139 930 Prairie Center Dr- Eden Prairie  Company Owned\n55    Teavana 28473-250151          Teavana - Southdale Center  Company Owned\n56  Starbucks 21755-192244                       Jerry's Edina       Licensed\n57  Starbucks     271-1488       3215 Galleria - Galleria Mall  Company Owned\n58  Starbucks     274-1489      3939 W. 50th - 50th and France  Company Owned\n59  Starbucks 16011-154128               Macy's-Southdale #231       Licensed\n60  Starbucks 24961-238825 Edina - Hwy 100 and Industrial Blvd  Company Owned\n61  Starbucks   2592-54119            Edina - Hwy 100 & Vernon  Company Owned\n62  Starbucks 76641-110944          Super Target Edina ST-2313       Licensed\n63  Starbucks 18565-178125        France Avenue & 76th - Edina  Company Owned\n64  Starbucks 20689-206848  Highway 169 and Freeport-Elk River  Company Owned\n65  Starbucks 27578-238022              Kowalski's - Excelsior       Licensed\n66  Starbucks 20343-204765           Target Forest Lake T-1244       Licensed\n67  Starbucks   2621-61481                         Forest Lake  Company Owned\n68  Starbucks 24962-238826          Central and 53rd - Fridley  Company Owned\n69  Starbucks     2228-659       Hwy 55 and Golden Valley Road  Company Owned\n70  Starbucks  76645-97519           Target Grand Rapids T-904       Licensed\n71  Starbucks 20342-204766              Target Hastings T-1245       Licensed\n72  Starbucks   9359-96468          Hwy 7 & Hopkins Crossroads  Company Owned\n73  Starbucks 23667-232356          Target - Hutchinson T-1210       Licensed\n74  Starbucks 16842-138228   Target Inver Grove Heights T-2519       Licensed\n75  Starbucks 26713-243085            Hy-Vee - Lakeville #1356       Licensed\n76  Starbucks   8959-95199 16227 Kenrick Ave - I35 & Cty Rd 46  Company Owned\n77  Starbucks   9762-97954    Lakeville - I-35 & Kenwood Trail  Company Owned\n78  Starbucks  72684-76620      Super Target Lakeville ST-1484       Licensed\n79  Starbucks  72677-64263     Super Target Lino Lakes ST-1448       Licensed\n80  Starbucks 21372-208604         Madison and Sioux - Mankato  Company Owned\n81  Starbucks  72951-93896                 Hy-Vee - Mankato #2       Licensed\n82  Starbucks 17564-178944        Maple Grove - Dunkirk Square  Company Owned\n83  Starbucks  76808-99120     Super Target Maple Grove T-2193       Licensed\n84  Starbucks    2318-2001                 7979 Wedgewood Lane  Company Owned\n85    Teavana 28570-249741               Teavana - Maple Grove  Company Owned\n86  Starbucks  76709-99117                Target Medina T-2223       Licensed\n87  Starbucks  72669-48339           Target Minneapolis T-1375       Licensed\n88  Starbucks  76188-88825                  Target Crystal T-3       Licensed\n89  Starbucks     295-1494                  25th and Riverside  Company Owned\n90  Starbucks  76974-96449             Target Minneapolis T-52       Licensed\n91  Starbucks 23000-226785            14th and 5th - Dinkytown  Company Owned\n92  Starbucks 17122-175084   University of Minnesota-Lind Hall       Licensed\n93  Starbucks 16152-165904 Target Minneapolis Downtown HQ T-13       Licensed\n94  Starbucks  2452-229484  22nd & Hennepin - Kenwood Crossing  Company Owned\n95  Starbucks  75137-68162        U of MN - Coffman Union Bldg       Licensed\n96  Starbucks    2341-2483      33 S. 6th Street - City Center  Company Owned\n97  Starbucks   8611-92908                 Nicollet & Franklin  Company Owned\n98  Starbucks   2488-21281     U of MN - 615 Washington Ave SE  Company Owned\n99  Starbucks  78063-99510      U of MN/Minneapolis - W Campus       Licensed\n100 Starbucks  76625-95375   Super Target Mpls/Fridley ST-2200       Licensed\n101 Starbucks  72621-28147                Macys -  Minneapolis       Licensed\n102 Starbucks     263-1496           IDS Center - Skyway level  Company Owned\n103 Starbucks   2648-54101 600 Hennepin Ave S - Mayo Clinic Sq  Company Owned\n104 Starbucks     288-1493           5351 Lyndale Avenue South  Company Owned\n105 Starbucks  76653-94395           Target Minneapolis T-1095       Licensed\n106 Starbucks  75788-85011       Double Tree Hotel Minneapolis       Licensed\n107 Starbucks     262-1495    120 S. 6th Street - Skyway level  Company Owned\n108 Starbucks 76736-104469    Target Minnetonka/Hopkins T-0100       Licensed\n109   Teavana 28366-249908          Teavana - Ridgedale Center  Company Owned\n110 Starbucks  72650-46879     Super Target Minnetonka ST-1356       Licensed\n111 Starbucks 76730-100251      Super Target Monticello T-2180       Licensed\n112 Starbucks  8960-103132                 Moorhead-I-94 & 8th  Company Owned\n113 Starbucks 16032-156750              Target Moorhead T-658.       Licensed\n114 Starbucks 26711-243086                Hy-Vee - New Hope #1       Licensed\n115   Teavana 28551-250039            Teavana - Maplewood Mall  Company Owned\n116 Starbucks 17380-177067           Target Northfield T-1211.       Licensed\n117 Starbucks 13347-106328        Hwy 36 and Hwy 5 - 5980 Neal  Company Owned\n118 Starbucks 27918-247538      Hy-Vee - Oakdale Main Entrance       Licensed\n119 Starbucks 26824-243087                      Hy-Vee Oakdale       Licensed\n120 Starbucks 76975-136638         Super Target Otsego ST-2456       Licensed\n121 Starbucks   8922-95305        641 W. Bridge St. - Owatonna  Company Owned\n122 Starbucks 20790-208086              Target Owatonna T-1068       Licensed\n123 Starbucks  2330-245290   Hwy 55 & Vicksburg Ave - Plymouth  Company Owned\n124 Starbucks  72685-76622        Super Target Plymouth ST-664       Licensed\n125 Starbucks   9712-97797        Plymouth - Hwy 55 & NW Blvd.  Company Owned\n126 Starbucks 29841-254985            Target - Red Wing T-1522       Licensed\n127 Starbucks 76815-110950      Super Target Richfield ST-2300       Licensed\n128 Starbucks   3484-92905                    Lyndale and 77th  Company Owned\n129 Starbucks 70009-126633 Doubletree Hotel Rochester Downtown       Licensed\n130 Starbucks 28120-248664                   HyVee Rochester 4       Licensed\n131 Starbucks  72639-32282      Super Target Rochester ST-1351       Licensed\n132   Teavana 28666-250117               Teavana - Apache Mall  Company Owned\n133 Starbucks 76812-110951 Super Target Rochester South ST-232       Licensed\n134 Starbucks  75560-62499                  Kahler Grand Hotel       Licensed\n135 Starbucks 24088-232347                Hy-Vee @ Rochester 2       Licensed\n136 Starbucks  72678-64266         Super Target Rogers ST-1456       Licensed\n137 Starbucks 18163-182985      Hwy 101 & Diamond Lk Rd-Rogers  Company Owned\n138 Starbucks   9652-97788           Rosemount - CR 42 & Hwy 3  Company Owned\n139 Starbucks  76441-90372      Super Target Roseville ST-2101       Licensed\n140 Starbucks     2209-658             NWC Hwy 36 and Fairview  Company Owned\n141 Starbucks 23753-154129                Macy's-Rosedale #233       Licensed\n142 Starbucks 13624-106909          Hwy 36 and Fairview Avenue  Company Owned\n143 Starbucks  76440-97594     Super Target Saint Paul ST-2046       Licensed\n144 Starbucks 47124-248644               Kowalski's - St. Paul       Licensed\n145 Starbucks 10602-101637               Savage-CR 42 & Hwy 13  Company Owned\n146 Starbucks  76116-87623         Super Target Savage ST-1833       Licensed\n147 Starbucks 21371-208605   CR 21 and Old Carriage - Shakopee  Company Owned\n148 Starbucks  72645-32261       Super Target Shoreview ST-619       Licensed\n149 Starbucks 49710-266984              Kowalski's @ Shoreview       Licensed\n150 Starbucks  76223-90370          Target St Cloud East T-930       Licensed\n151 Starbucks  76408-96764      Super Target Knollwood ST-2189       Licensed\n152 Starbucks  75587-80343      MSP Minn D6 Baggage Claim Area       Licensed\n153 Starbucks 75884-101521                  MSP North Ternimal       Licensed\n154 Starbucks   72336-5745   MSP Minn Green Concourse, Gate 69       Licensed\n155 Starbucks 19892-188669           St. Cloud, Division Place  Company Owned\n156 Starbucks  10203-99310   St. Louis Park-Minnetonka & Hwy 7  Company Owned\n157 Starbucks   2696-63425    Excelsior & Grand-St. Louis Park  Company Owned\n158 Starbucks  10156-99311      St. Paul-Grand Ave & Oxford St  Company Owned\n159 Starbucks 20425-204771                Target St. Paul T-68       Licensed\n160 Starbucks     276-1490                   2078 Ford Parkway  Company Owned\n161 Starbucks     2211-638 Snelling & Selby-171 Snelling Ave N  Company Owned\n162 Starbucks   2462-18999     380 St. Peter St-Lawson Commons  Company Owned\n163 Starbucks 76592-100250       Target St Paul/Oakdale T-2135       Licensed\n164 Starbucks 17498-147376                  Hamline University       Licensed\n165 Starbucks 76771-108255       SuperTarget - St. Paul T-2229       Licensed\n166 Starbucks  76130-88841             Target Stillwater T-931       Licensed\n167 Starbucks  79211-97807        Kowalski-Stillwater/Oak Park       Licensed\n168 Starbucks 20341-204767        Target Vadnais Heights T-751       Licensed\n169 Starbucks 25515-241175         Hwy 96 and Centerville Road  Company Owned\n170 Starbucks  76666-97597               Target Virginia T-847       Licensed\n171 Starbucks 76979-136639               Target Waconia T-2449       Licensed\n172 Starbucks 10511-101337  Waite Park - 2nd St S & Waite Park  Company Owned\n173 Starbucks   2440-20979        740 E. Lake Street - Wayzata  Company Owned\n174 Starbucks   9526-96609  S. Robert & Thompson-West St. Paul  Company Owned\n175 Starbucks 27985-249186              White Bear Ave & I-694  Company Owned\n176 Starbucks  72719-36379      Kowalski-White Bear Lake #4727       Licensed\n177 Starbucks  76622-99116                Target Winona T-1096       Licensed\n178 Starbucks   2529-35559               8362 Tamarack Village  Company Owned\n179 Starbucks  2241-213605              7230 Valley Creek Road  Company Owned\n180 Starbucks 15230-138227         Target Woodbury East T-2406       Licensed\n181 Starbucks 21296-210564           Woodbury Dr. and Commerce  Company Owned\n182 Starbucks  72701-27209                 Kowalski - Woodbury       Licensed\n183 Starbucks 28021-242084              Target Woodbury T-0694       Licensed\n184 Starbucks 25759-235385            Jerry's Foods - Woodbury       Licensed\n                                              street.address\n1                                              4404 Hwy 29 S\n2                                   2000 Bonker Lake Blvd NW\n3                                      13131 Riverdale Dr NW\n4                                            15150 Cedar Ave\n5                                        15560 Pilot Knob Rd\n6                                       3833 Lexington Ave N\n7                                          14546 Dellwood Dr\n8                                          15091 Edgewood Dr\n9                                     2100 Paul Bunyan Dr NW\n10                                         1500 109th Ave NE\n11                                    1384 109th Avenue, 100\n12              60 E. Broadway, C310, Clover Shopping Center\n13  704-708 West 98th Street, Mall of America - 2nd location\n14                   276 West Market Street, Mall of America\n15             164 E. Broadway, Suite E164, Southtown Center\n16                    7805 Southtown Center, Mall of America\n17                                        128 WEST MARKET ST\n18                                            2555 W 79th St\n19                                        5512 Brooklyn Blvd\n20                                       7535 W Broadway Ave\n21                                     7000 Target Parkway N\n22                                       9409 Zane Ave North\n23                                       9409 Zane Ave North\n24                                      1300 State Hwy 55 NE\n25                      810 County Rd 42W, Burnsville Center\n26                             1178 Burnsville Center, #2010\n27                                     1310 County Road 42 W\n28                                                Highway 95\n29                                        11223 Aquila Drive\n30                                11960 Business Park Blvd N\n31                                  190 Lake Drive East, 140\n32                                             851 W 78th St\n33                                         111 Pioneer Trail\n34                        3300 124th Ave NW, Pine Cone Plaza\n35                                     9920 Foley Blvd, 102A\n36                                    8600 Springbrook Dr NW\n37                            7190 East Point Douglas Rd. S.\n38                                 8655 E Point Douglas Rd S\n39                                     5596 W. Broadway Ave.\n40                   1902 Miller Trunk Hwy, Miller Hill Mall\n41                              1600 Miller Trunk Hwy., #E08\n42                                         1002 Woodland Ave\n43                                 1405 Miller Trunk Highway\n44                                       331 W. Superior St.\n45                  2040 Cliff Rd., Suite 101, Eagan Station\n46                                      3450 Pilot Knob Road\n47                      Yankee Doodle Road / Pilot Knob Road\n48            1646 Diffley Road, Paragon Outlets Twin Cities\n49                           3965 Eagan Outlets Parkway, 455\n50                               9639 Anderson Lakes Parkway\n51                              582 PRAIRIE CENTER DR., #260\n52             TBD Hwy 62 and Shady Oak, Eden Prairie Center\n53         8251 Flying Clould Dr., #1226, Prairieview Center\n54                930 Prairie Center Drive, Southdale Center\n55                                     1075 Southdale Center\n56                                  5101 Vernon Avenue South\n57                                             3215 Galleria\n58                                            3939 W 50th St\n59                                         100 Southdale Ctr\n60                  5122 Edina Industrial Blvd, Vernon Shops\n61                                       5121 Gus Young Lane\n62                                           7000 York Ave S\n63                                           7503 France Ave\n64                                     19179 Freeport Ave, A\n65                                              440 Water St\n66                   356 12th St SW, Forest Lake Marketplace\n67                                2009 W. Broadway Ave., 900\n68          5300 Central Ave NE, Golden Valley Commons, #140\n69                               7802 Olson Memorial Highway\n70                                       2140 S Pokegama Ave\n71                                     875 General Sieben Dr\n72                                          1505 State Hwy 7\n73                                         1370 Highway 15 S\n74                                            7841 Amana Trl\n75                                     16150 Pilot Knob Road\n76                       16227 Kenrick Ave., Argonne Village\n77                                       17740 Kenwood Trail\n78                                         18275 Kenrick Ave\n79                                             749 Apollo Dr\n80                                          1872 Madison Ave\n81                                             2010 Adams St\n82                                   9404 Dunkirk Lane North\n83                                      15300 Grove Circle N\n84                          7979 Wedgewood Lane, Maple Grove\n85                                      12113 ELM CREEK BLVD\n86                                         300 Clydesdale Rd\n87                                         900 Nicollet Mall\n88                                       5537 W Broadway Ave\n89                                             815 25th Ave.\n90                                            2500 E Lake St\n91                                        425 14th Avenue SE\n92                                          207 Church St SE\n93                                        1000 Nicollet Mall\n94                                  2212 Hennepin Ave, Bay 1\n95                                        218 Como Avenue SE\n96                                       33 South 6th Street\n97              2000 Nicollet Ave., Radisson Hotel Metrodome\n98                                     615 Washington Ave SE\n99                                            321 19th Ave S\n100                           755 53rd Ave NE, Nicollet Mall\n101                                          700 On the Mall\n102        80 South 8th Street, Minneapolis Lifestyle Centre\n103                                  600 Hennepin Ave. South\n104                                   5351 Lyndale Ave South\n105                                   1650 New Brighton Blvd\n106                                         1101 LaSalle Ave\n107                                        120 S. 6th Street\n108                     13201 Ridgedale Dr, Ridgedale Center\n109                           12401 Wayzata Blvd, Spc. #2138\n110                                     4802 County Road 101\n111                                         1447 East 7th St\n112                                        906 Holiday Drive\n113                                             3301 US-10 E\n114                          8200 42nd Ave N, Maplewood Mall\n115                               3001 Whitebear Ave., #2025\n116                                         2323 Highway 3 S\n117                                   5980 Neal Ave. N., 800\n118                                           7180 10th St N\n119                                       7120 10th St North\n120                                         15800 87th St NE\n121                           641 West Bridge St., Suite 100\n122                                              301 Park Dr\n123                                  15850 32nd Avenue North\n124                                     4175 Vinewood Lane N\n125                                          2661 Campus Dr.\n126                                           151 Tyler Rd N\n127                                      6445 Richfield Pkwy\n128                       7610 Lyndale Ave. South, Suite 800\n129                                           150 S Broadway\n130                                4200 West Circle Drive NW\n131                      3827 Marketplace Dr NW, Apache Mall\n132                                   1200 12th St. SW, #250\n133                                        4611 Maine Ave SE\n134                                         20 SW Second Ave\n135                                            500 37th St W\n136                                  21615 S Diamond Lake Rd\n137                          13590 Northdale Blvd, Suite 100\n138                                 14903 South Robert Trail\n139                                       1515 W County Rd B\n140                                     2305 Fairview Avenue\n141                      900 Rosedale CTR, Hwy 36 & Fairview\n142                                              1820 Hwy 36\n143                                         1750 S Robert St\n144                                        1261 GRAND AVENUE\n145                                13945 Hwy 13 Frontage Rd.\n146                                             14333 Hwy 13\n147                          8090 Old Carriage Ct N, Suite D\n148                                     3800 N Lexington Ave\n149                                             441 Hwy 96 W\n150                                       120 Lincoln Ave SE\n151                                                8900 SR-7\n152                                       4300 Gulmack Drive\n153                                       4300 Glumack Drive\n154                       4300 Gulmack Drive, Division Place\n155                                  2860 W. Division Street\n156            4201 Minnetonka Blvd., Excelsior Park Commons\n157                                           3850 Grand Way\n158                                          1062 Grand Ave.\n159                                        1744 Suburban Ave\n160                                        2078 FORD PARKWAY\n161                                    171 Snelling Avenue N\n162                                        380 St. Peter St.\n163                                           7900 32nd St N\n164                                       1536 Hewitt Avenue\n165                                      1300 University Ave\n166                                           2021 Market Dr\n167                                          5801 Neal Ave N\n168                                          975 County Rd E\n169                                            1016 E Hwy 96\n170                                           1001 13th St S\n171                 875 E Main St, Marketplace of Waite Park\n172                                     124 2nd Street South\n173                                     740 East Lake Street\n174                                   1470 Roberts St. South\n175                                          1950 Buerkle Rd\n176                                        4391 S. Lake Ave.\n177                        860 Mankato Ave, Tamarack Village\n178                                    8362 Tamarack Village\n179                                     7230 Valley Creek Rd\n180                                          449 Commerce Dr\n181                                    610 Woodbury Dr., 100\n182                                    8505 Valley Creek Rd.\n183                                  7200 Valley Creek Plaza\n184                                      7760 Hargis Parkway\n                   city state.province country  postcode   phone.number\n1            Alexandria             MN      US 563082915   320-763-6661\n2               Andover             MN      US 553044014   763-852-0113\n3                 Anoka             MN      US     55448     6127902009\n4          Apple Valley             MN      US 551247038   952-891-5500\n5          Apple Valley             MN      US 551247286   952-236-3165\n6           Arden Hills             MN      US     55126   651-486-3805\n7                Baxter             MN      US 564259744   218-828-3535\n8                Baxter             MN      US     56425   218-828-2978\n9               Bemidji             MN      US 566015645               \n10               Blaine             MN      US 554494670   763-354-1000\n11               Blaine             MN      US     55434     7637676833\n12          Bloomington             MN      US     55425   612-257-5599\n13          Bloomington             MN      US 554204718   952-881-9877\n14          Bloomington             MN      US 554255522   952-853-1274\n15          Bloomington             MN      US 554255511   952-854-1922\n16          Bloomington             MN      US 554311324   952-885-9985\n17          Bloomington             MN      US     55425   952-853-9880\n18          Bloomington             MN      US 554311277   952-888-7701\n19      Brooklyn Center             MN      US 554293054   763-560-1095\n20        Brooklyn Park             MN      US 554281287   612-425-5400\n21        Brooklyn Park             MN      US     55444               \n22        Brooklyn Park             MN      US     55443   763-488-4500\n23        Brooklyn Park             MN      US     55443   763-488-4500\n24              Buffalo             MN      US 553134321   763-682-4996\n25           Burnsville             MN      US 553374492   952-236-3003\n26           Burnsville             MN      US     55306   952-898-5103\n27           Burnsville             MN      US     55337     6125003915\n28            Cambridge             MN      US     55008   612-257-4407\n29             Champlin             MN      US     55316     6125003927\n30             Champlin             MN      US 553162005   763-354-1006\n31           Chanhassen             MN      US     55317     9522948040\n32           Chanhassen             MN      US     55317   952-470-0206\n33               Chaska             MN      US 553181123   952-361-3043\n34          Coon Rapids             MN      US     55433   763-323-2931\n35          Coon Rapids             MN      US     55448   763 783 3412\n36          Coon Rapids             MN      US 554336033   763-785-0322\n37        Cottage Grove             MN      US 550163024   651-769-0719\n38        Cottage Grove             MN      US     55016   651-458-8179\n39              Crystal             MN      US     55428     7635334869\n40               Duluth             MN      US 558111810   218-727-8851\n41               Duluth             MN      US     55811   218-722-2386\n42               Duluth             MN      US     55811     2187243034\n43               Duluth             MN      US 558115613   218-722-6132\n44               Duluth             MN      US 558024532   218-722-1025\n45                Eagan             MN      US 551222491   651/405-0800\n46                Eagan             MN      US 551223825   651-405-0534\n47                Eagan             MN      US     55122   515-267-2805\n48                Eagan             MN      US 551222213   651-328-8300\n49                Eagan             MN      US     55122     6514545153\n50         Eden Prairie             MN      US 553444155     9529448646\n51         Eden Prairie             MN      US 553447942     9528332170\n52         Eden Prairie             MN      US     55343     6129108947\n53         Eden Prairie             MN      US     55344   305-442-9602\n54         Eden Prairie             MN      US 553447304     9529752951\n55                Edina             MN      US     55435   952-929-1102\n56                Edina             MN      US     55436   952-929-2685\n57                Edina             MN      US 554352509     9529240344\n58                Edina             MN      US 554241244     9529277055\n59                Edina             MN      US 554352403   952-924-6725\n60                Edina             MN      US     55439     6126557209\n61                Edina             MN      US 554361530   952-920-0193\n62                Edina             MN      US 554354285   952-925-4610\n63                Edina             MN      US     55435     9527377820\n64            Elk River             MN      US     55330     7634413991\n65            Excelsior             MN      US     55331   952-229-8300\n66          Forest Lake             MN      US     55025   651-464-4700\n67          Forest Lake             MN      US 550259374   651-464-0688\n68              Fridley             MN      US     55421     6129004914\n69        Golden Valley             MN      US 554274715     7635466775\n70         Grand Rapids             MN      US 557442507   218-326-3031\n71             Hastings             MN      US     55033   651-480-2080\n72              Hopkins             MN      US     55305   952-938-3604\n73           Hutchinson             MN      US     55350   320-587-7113\n74  Inver Grove Heights             MN      US     55077   651-234-2949\n75            Lakeville             MN      US     55044   952-423-9340\n76            Lakeville             MN      US 550448498   952-892-0778\n77            Lakeville             MN      US 550449454   952-898-1373\n78            Lakeville             MN      US 550447306   952-892-5400\n79           Lino Lakes             MN      US 550143035   651-784-7601\n80              Mankato             MN      US     56001    507 6258900\n81              Mankato             MN      US 560016817   507-625-9070\n82          Maple Grove             MN      US     55311     7634161877\n83          Maple Grove             MN      US 553694469   763-447-2506\n84          Maple Grove             MN      US 553699411   763-420-6311\n85          Maple Grove             MN      US     55369   763-493-0040\n86               Medina             MN      US 553404538   763-852-0006\n87          Minneapolis             MN      US 554032530   763-440-9390\n88          Minneapolis             MN      US 554283592   763-533-2231\n89          Minneapolis             MN      US 554541418   612-305-0235\n90          Minneapolis             MN      US 554061976 (612) 721-5701\n91          Minneapolis             MN      US     55414     6123310167\n92          Minneapolis             MN      US     55455               \n93          Minneapolis             MN      US 554032542   612-761-7291\n94          Minneapolis             MN      US     55405     6123745168\n95          Minneapolis             MN      US 554141023   612-625-2037\n96          Minneapolis             MN      US 554023601     6123397084\n97          Minneapolis             MN      US 554042526   612-871-1338\n98          Minneapolis             MN      US 554142931   612-378-7765\n99          Minneapolis             MN      US 554550438   612-625-8585\n100         Minneapolis             MN      US 554211298   763-571-9361\n101         Minneapolis             MN      US     55402     6123752077\n102         Minneapolis             MN      US     55402   612-371-0383\n103         Minneapolis             MN      US 554031816   612/333-9944\n104         Minneapolis             MN      US 554191229   612-821-0686\n105         Minneapolis             MN      US 554131643   612-781-7033\n106         Minneapolis             MN      US 554032046   612-492-2230\n107         Minneapolis             MN      US 554021803   612-371-0555\n108          Minnetonka             MN      US 553051808   952-542-8250\n109          Minnetonka             MN      US     55305   952-544-0018\n110          Minnetonka             MN      US 553452635   952-401-3830\n111          Monticello             MN      US 553624666   763-586-3327\n112            Moorhead             MN      US 565604445   218-233-0392\n113            Moorhead             MN      US     56560   218-233-2953\n114            New Hope             MN      US     55427               \n115     North Maplewood             MN      US     55109   651-777-7397\n116          Northfield             MN      US     55057     5076454777\n117    Oak Park Heights             MN      US 550822190   651-275-8926\n118             Oakdale             MN      US     55128   651-714-3160\n119             Oakdale             MN      US     55128   651-714-3186\n120              Otsego             MN      US 553306546   763-252-1316\n121            Owatonna             MN      US 550606400   507-455-3624\n122            Owatonna             MN      US     55060   507-451-1882\n123            Plymouth             MN      US     55447               \n124            Plymouth             MN      US 554422624   763-553-0302\n125            Plymouth             MN      US 554412692   763-553-3087\n126            Red Wing             MN      US     55066     6513887704\n127           Richfield             MN      US 554236400   612-252-0473\n128           Richfield             MN      US 554234167   612-869-9839\n129           Rochester             MN      US 559046507     5075292433\n130           Rochester             MN      US     55901   507-292-2000\n131           Rochester             MN      US 559013192   507-536-2555\n132           Rochester             MN      US     55902   507-289-3711\n133           Rochester             MN      US 559046929   507-206-5020\n134           Rochester             MN      US 559023027   507-280-6200\n135           Rochester             MN      US     55901   507-289-1815\n136              Rogers             MN      US 553748893   763-428-1394\n137              Rogers             MN      US     55374     7634282083\n138           Rosemount             MN      US 550683106   651-423-7112\n139           Roseville             MN      US 551136005   651-482-0198\n140           Roseville             MN      US 551132724 (651) 697-0215\n141           Roseville             MN      US     55113   651-639-6600\n142           Roseville             MN      US 551134030   651-631-3089\n143          Saint Paul             MN      US 551185112   651-455-6671\n144          Saint Paul             MN      US     55105     6516983366\n145              Savage             MN      US 553782281   952-440-2314\n146              Savage             MN      US 553782153   652-226-1444\n147            Shakopee             MN      US     55379     9524454241\n148           Shoreview             MN      US 551262916   651-486-0048\n149           Shoreview             MN      US     55126               \n150            St Cloud             MN      US 563040822   320-654-0712\n151       St Louis Park             MN      US     55426   952-935-9641\n152             St Paul             MN      US 551113002   612-726-5360\n153             St Paul             MN      US 551113002     6123966531\n154             St Paul             MN      US 551113002     6123966531\n155           St. Cloud             MN      US     56301     3202497890\n156      St. Louis Park             MN      US 554164129   952-922-2084\n157      St. Louis Park             MN      US 554164788    952920-8531\n158            St. Paul             MN      US 551053805   651-221-4465\n159            St. Paul             MN      US     55106   651-778-1188\n160            St. Paul             MN      US 551161813   651-699-9409\n161            St. Paul             MN      US 551046747   651-659-9033\n162            St. Paul             MN      US 551021313   651-222-7118\n163            St. Paul             MN      US 551284054   651-855-0990\n164            St. Paul             MN      US 551041205               \n165            St. Paul             MN      US     55401   651-642-1146\n166          Stillwater             MN      US 550827546   651-439-0292\n167          Stillwater             MN      US 550822177   651-439-9161\n168     Vadnais Heights             MN      US     55127   651-483-9637\n169     Vadnais Heights             MN      US     55127               \n170            Virginia             MN      US 557923254   218-741-6603\n171             Waconia             MN      US 553871081   952-442-9333\n172          Waite Park             MN      US 563871363   320-251-6255\n173             Wayzata             MN      US 553911713   952-249-1555\n174       West St. Paul             MN      US 551183140   651-450-4494\n175     White Bear Lake             MN      US     55110     6124990682\n176     White Bear Lake             MN      US 551103455   651-429-5913\n177              Winona             MN      US 559874867   507-452-7006\n178            Woodbury             MN      US 551253392   651-735-7600\n179            Woodbury             MN      US     55125     6517140357\n180            Woodbury             MN      US     55125   651-239-1874\n181            Woodbury             MN      US     55125     6517399350\n182            Woodbury             MN      US 551252342   651-578-8800\n183            Woodbury             MN      US     55125   651-735-7083\n184            Woodbury             MN      US     55129   952-237-7161\n                     timezone longitude latitude\n1   GMT-06:00 America/Chicago    -95.39    45.85\n2   GMT-06:00 America/Chicago    -93.32    45.22\n3   GMT-06:00 America/Chicago    -93.36    45.21\n4   GMT-06:00 America/Chicago    -93.21    44.73\n5   GMT-06:00 America/Chicago    -93.18    44.72\n6   GMT-06:00 America/Chicago    -93.15    45.06\n7   GMT-06:00 America/Chicago    -94.24    46.37\n8   GMT-06:00 America/Chicago    -94.25    46.37\n9   GMT-06:00 America/Chicago    -94.91    47.49\n10  GMT-06:00 America/Chicago    -93.23    45.17\n11  GMT-06:00 America/Chicago    -93.24    45.17\n12  GMT-06:00 America/Chicago    -93.24    44.86\n13  GMT-06:00 America/Chicago    -93.29    44.83\n14  GMT-06:00 America/Chicago    -93.24    44.86\n15  GMT-06:00 America/Chicago    -93.24    44.85\n16  GMT-06:00 America/Chicago    -93.31    44.86\n17  GMT-06:00 America/Chicago    -93.24    44.85\n18  GMT-06:00 America/Chicago    -93.31    44.86\n19  GMT-06:00 America/Chicago    -93.32    45.06\n20  GMT-06:00 America/Chicago    -93.38    45.09\n21  GMT-06:00 America/Chicago    -93.37    45.14\n22  GMT-06:00 America/Chicago    -93.36    45.13\n23  GMT-06:00 America/Chicago    -93.36    45.12\n24  GMT-06:00 America/Chicago    -93.86    45.17\n25  GMT-06:00 America/Chicago    -93.29    44.75\n26  GMT-06:00 America/Chicago    -93.29    44.74\n27  GMT-06:00 America/Chicago    -93.30    44.75\n28  GMT-06:00 America/Chicago    -93.21    45.57\n29  GMT-06:00 America/Chicago    -93.39    45.16\n30  GMT-06:00 America/Chicago    -93.39    45.17\n31  GMT-06:00 America/Chicago    -93.52    44.86\n32  GMT-06:00 America/Chicago    -93.54    44.86\n33  GMT-06:00 America/Chicago    -93.60    44.83\n34  GMT-06:00 America/Chicago    -93.35    45.20\n35  GMT-06:00 America/Chicago    -93.28    45.15\n36  GMT-06:00 America/Chicago    -93.27    45.13\n37  GMT-06:00 America/Chicago    -92.96    44.83\n38  GMT-06:00 America/Chicago    -92.93    44.82\n39  GMT-06:00 America/Chicago    -93.36    45.05\n40  GMT-06:00 America/Chicago    -92.17    46.81\n41  GMT-06:00 America/Chicago    -92.16    46.80\n42  GMT-06:00 America/Chicago    -92.08    46.82\n43  GMT-06:00 America/Chicago    -92.16    46.81\n44  GMT-06:00 America/Chicago    -92.10    46.78\n45  GMT-06:00 America/Chicago    -93.21    44.79\n46  GMT-06:00 America/Chicago    -93.17    44.83\n47  GMT-06:00 America/Chicago    -93.17    44.84\n48  GMT-06:00 America/Chicago    -93.19    44.80\n49  GMT-06:00 America/Chicago    -93.21    44.81\n50  GMT-06:00 America/Chicago    -93.40    44.84\n51  GMT-06:00 America/Chicago    -93.43    44.85\n52  GMT-06:00 America/Chicago    -93.42    44.89\n53  GMT-06:00 America/Chicago    -93.43    44.85\n54  GMT-06:00 America/Chicago    -93.44    44.86\n55  GMT-06:00 America/Chicago    -93.33    44.88\n56  GMT-06:00 America/Chicago    -93.36    44.91\n57  GMT-06:00 America/Chicago    -93.32    44.88\n58  GMT-06:00 America/Chicago    -93.33    44.91\n59  GMT-06:00 America/Chicago    -93.33    44.88\n60  GMT-06:00 America/Chicago    -93.35    44.86\n61  GMT-06:00 America/Chicago    -93.35    44.91\n62  GMT-06:00 America/Chicago    -93.32    44.88\n63  GMT-06:00 America/Chicago    -93.33    44.87\n64  GMT-06:00 America/Chicago    -93.56    45.32\n65  GMT-06:00 America/Chicago    -93.57    44.90\n66  GMT-06:00 America/Chicago    -93.00    45.27\n67  GMT-06:00 America/Chicago    -93.01    45.28\n68  GMT-06:00 America/Chicago    -93.25    45.06\n69  GMT-06:00 America/Chicago    -93.38    44.98\n70  GMT-06:00 America/Chicago    -93.53    47.21\n71  GMT-06:00 America/Chicago    -92.89    44.74\n72  GMT-06:00 America/Chicago    -93.42    44.93\n73  GMT-06:00 America/Chicago    -94.38    44.87\n74  GMT-06:00 America/Chicago    -93.08    44.82\n75  GMT-06:00 America/Chicago    -93.18    44.72\n76  GMT-06:00 America/Chicago    -93.28    44.71\n77  GMT-06:00 America/Chicago    -93.28    44.69\n78  GMT-06:00 America/Chicago    -93.29    44.68\n79  GMT-06:00 America/Chicago    -93.11    45.18\n80  GMT-06:00 America/Chicago    -93.95    44.17\n81  GMT-06:00 America/Chicago    -93.95    44.17\n82  GMT-06:00 America/Chicago    -93.49    45.13\n83  GMT-06:00 America/Chicago    -93.48    45.13\n84  GMT-06:00 America/Chicago    -93.45    45.10\n85  GMT-06:00 America/Chicago    -93.44    45.09\n86  GMT-06:00 America/Chicago    -93.53    45.05\n87  GMT-06:00 America/Chicago    -93.27    44.97\n88  GMT-06:00 America/Chicago    -93.36    45.05\n89  GMT-06:00 America/Chicago    -93.24    44.96\n90  GMT-06:00 America/Chicago    -93.24    44.95\n91  GMT-06:00 America/Chicago    -93.24    44.98\n92  GMT-06:00 America/Chicago    -93.23    44.97\n93  GMT-06:00 America/Chicago    -93.27    44.97\n94  GMT-06:00 America/Chicago    -93.29    44.96\n95  GMT-06:00 America/Chicago    -93.24    44.97\n96  GMT-06:00 America/Chicago    -93.27    44.98\n97  GMT-06:00 America/Chicago    -93.28    44.96\n98  GMT-06:00 America/Chicago    -93.23    44.97\n99  GMT-06:00 America/Chicago    -93.25    44.97\n100 GMT-06:00 America/Chicago    -93.25    45.07\n101 GMT-06:00 America/Chicago    -93.27    44.98\n102 GMT-06:00 America/Chicago    -93.27    44.98\n103 GMT-06:00 America/Chicago    -93.28    44.98\n104 GMT-06:00 America/Chicago    -93.29    44.91\n105 GMT-06:00 America/Chicago    -93.23    45.00\n106 GMT-06:00 America/Chicago    -93.28    44.97\n107 GMT-06:00 America/Chicago    -93.27    44.98\n108 GMT-06:00 America/Chicago    -93.45    44.97\n109 GMT-06:00 America/Chicago    -93.44    44.97\n110 GMT-06:00 America/Chicago    -93.50    44.92\n111 GMT-06:00 America/Chicago    -93.77    45.29\n112 GMT-06:00 America/Chicago    -96.77    46.85\n113 GMT-06:00 America/Chicago    -96.75    46.86\n114 GMT-06:00 America/Chicago    -93.39    45.03\n115 GMT-06:00 America/Chicago    -93.02    45.03\n116 GMT-06:00 America/Chicago    -93.19    44.43\n117 GMT-06:00 America/Chicago    -92.85    45.03\n118 GMT-06:00 America/Chicago    -92.96    44.96\n119 GMT-06:00 America/Chicago    -92.96    44.96\n120 GMT-06:00 America/Chicago    -93.56    45.28\n121 GMT-06:00 America/Chicago    -93.24    44.08\n122 GMT-06:00 America/Chicago    -93.25    44.09\n123 GMT-06:00 America/Chicago    -93.48    45.02\n124 GMT-06:00 America/Chicago    -93.45    45.03\n125 GMT-06:00 America/Chicago    -93.45    45.01\n126 GMT-06:00 America/Chicago    -92.58    44.57\n127 GMT-06:00 America/Chicago    -93.25    44.88\n128 GMT-06:00 America/Chicago    -93.29    44.86\n129 GMT-06:00 America/Chicago    -92.46    44.02\n130 GMT-06:00 America/Chicago    -92.53    44.07\n131 GMT-06:00 America/Chicago    -92.50    44.06\n132 GMT-06:00 America/Chicago    -92.48    44.00\n133 GMT-06:00 America/Chicago    -92.47    43.95\n134 GMT-06:00 America/Chicago    -92.47    44.02\n135 GMT-06:00 America/Chicago    -92.47    44.06\n136 GMT-06:00 America/Chicago    -93.55    45.20\n137 GMT-06:00 America/Chicago    -93.55    45.20\n138 GMT-06:00 America/Chicago    -93.13    44.73\n139 GMT-06:00 America/Chicago    -93.16    45.01\n140 GMT-06:00 America/Chicago    -93.18    45.01\n141 GMT-06:00 America/Chicago    -93.17    45.01\n142 GMT-06:00 America/Chicago    -93.18    45.01\n143 GMT-06:00 America/Chicago    -93.08    44.89\n144 GMT-06:00 America/Chicago    -93.15    44.94\n145 GMT-06:00 America/Chicago    -93.38    44.75\n146 GMT-06:00 America/Chicago    -93.38    44.74\n147 GMT-06:00 America/Chicago    -93.41    44.78\n148 GMT-06:00 America/Chicago    -93.14    45.06\n149 GMT-06:00 America/Chicago    -93.12    45.08\n150 GMT-06:00 America/Chicago    -94.15    45.57\n151 GMT-06:00 America/Chicago    -93.39    44.94\n152 GMT-06:00 America/Chicago    -93.21    44.88\n153 GMT-06:00 America/Chicago    -93.21    44.88\n154 GMT-06:00 America/Chicago    -93.21    44.88\n155 GMT-06:00 America/Chicago    -94.19    45.55\n156 GMT-06:00 America/Chicago    -93.33    44.95\n157 GMT-06:00 America/Chicago    -93.34    44.93\n158 GMT-06:00 America/Chicago    -93.14    44.94\n159 GMT-06:00 America/Chicago    -93.03    44.95\n160 GMT-06:00 America/Chicago    -93.19    44.92\n161 GMT-06:00 America/Chicago    -93.17    44.95\n162 GMT-06:00 America/Chicago    -93.10    44.95\n163 GMT-06:00 America/Chicago    -92.95    45.00\n164 GMT-06:00 America/Chicago    -93.17    44.97\n165 GMT-06:00 America/Chicago    -93.16    44.95\n166 GMT-06:00 America/Chicago    -92.84    45.04\n167 GMT-06:00 America/Chicago    -92.84    45.03\n168 GMT-06:00 America/Chicago    -93.06    45.05\n169 GMT-06:00 America/Chicago    -93.06    45.08\n170 GMT-06:00 America/Chicago    -92.55    47.51\n171 GMT-06:00 America/Chicago    -93.77    44.85\n172 GMT-06:00 America/Chicago    -94.22    45.55\n173 GMT-06:00 America/Chicago    -93.51    44.97\n174 GMT-06:00 America/Chicago    -93.08    44.90\n175 GMT-06:00 America/Chicago    -93.02    45.04\n176 GMT-06:00 America/Chicago    -93.02    45.07\n177 GMT-06:00 America/Chicago    -91.62    44.03\n178 GMT-06:00 America/Chicago    -92.94    44.94\n179 GMT-06:00 America/Chicago    -92.96    44.93\n180 GMT-06:00 America/Chicago    -92.91    44.94\n181 GMT-06:00 America/Chicago    -92.90    44.94\n182 GMT-06:00 America/Chicago    -92.93    44.92\n183 GMT-06:00 America/Chicago    -92.96    44.93\n184 GMT-06:00 America/Chicago    -92.94    44.89\n\n\n\nstarbucks_mn &lt;- starbucks |&gt;   \n  filter(state.province== \"MN\")\n\n\n#|fig_cap: \"A spatial point map displaying the locations of Starbucks stores within Minnesota. The distribution highlights store density in the Twin Cities which is the major metropolitan area.\"\n\n#|fig_alt: \"A point map (interactive) of Minnesota showing the locations of Starbucks stores. Densely clustered points appear in major cities, with sparser distribution in rural areas. Another key takeaway is that there are more concentrated in the Twin Cities than the rest of Minnesota. The map provides a visual representation of Starbucks' geographic presence across the state. Data is from starbucks https://mac-stat.github.io/data/starbucks.csv\".\n\nleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"darkgreen\"))\n\nAssuming \"longitude\" and \"latitude\" are longitude and latitude, respectively",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "Univariate Viz",
    "section": "",
    "text": "6.1 Exercises\n# Import data\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercises",
    "href": "ica/ica-uni.html#exercises",
    "title": "Univariate Viz",
    "section": "",
    "text": "6.1.1 Exercise 1: Research Questions\nLet’s dig into the hikes data, starting with the elevation and difficulty ratings of the hikes:\n\nhead(hikes)\n\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate\n\n\n\nWhat features would we like a visualization of the categorical difficulty rating variable to capture? We would like to create a layer that demonstrates the changes in scale between each peak.\nWhat about a visualization of the quantitative elevation variable? We would like to create a layer that shows how the elevation changes at each peak (relationship between data points). ### Exercise 2: Load tidyverse {.unnumbered}\n\nIn order to use ggplot tools, we have to first load the tidyverse package in which they live. We’ve installed the package but we need to tell R when we want to use it. Run the chunk below to load the library. You’ll need to do this within any .qmd file that uses ggplot().\n\n# Load the package\nlibrary(tidyverse)\n\nExercise 3: Bar Chart of Ratings - Part 1\nConsider some specific research questions about the difficulty rating of the hikes:\n\nHow many hikes fall into each category?\nAre the hikes evenly distributed among these categories, or are some more common than others?\n\nAll of these questions can be answered with: (1) a bar chart; of (2) the categorical data recorded in the rating column. First, set up the plotting frame:\n\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\nThink about:\n\nWhat did this do? What do you observe? Blank axis with the three different ratings.\nWhat, in general, is the first argument of the ggplot() function? To look in the data file titled hikes.\nWhat is the purpose of writing x = rating? Tells R to make the x-axis out of the different possible data points in rating.\nWhat do you think aes stands for?!? Aesthetics\n\n6.1.2 Exercise 4: Bar Chart of Ratings - Part 2\nNow let’s add a geometric layer to the frame / canvas, and start customizing the plot’s theme. To this end, try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\nNOTE:\n\nPay attention to the general code properties and structure, not memorization.\nNot all of these are “good” plots. We’re just exploring ggplot.\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n\nExercise 5: Bar Chart Follow-up\nPart a\nReflect on the ggplot() code.\n\nWhat’s the purpose of the +? When do we use it? Adding a component to the plot.\nWe added the bars using geom_bar()? Why “geom”? Geometric layer to the frame/canvas\nWhat does labs() stand for? labels\nWhat’s the difference between color and fill? Color is border color and fill is the color within the individual bars.\nPart b\nIn general, bar charts allow us to examine the following properties of a categorical variable:\n\n\nobserved categories: What categories did we observe?\n\nRating (easy, moderate, difficult)\n\n\nvariability between categories: Are observations evenly spread out among the categories, or are some categories more common than others?\n\nSome categories are more common than others.\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Summarize below what you learned from the bar chart, in context.\nThe bar chart shows us that moderate hikes were the most common type of hike, with difficult hikes being the least common. There are roughly 45 total hikes.\nPart c\nIs there anything you don’t like about this barplot? For example: check out the x-axis again.\nI wish that the x-axis was in the order of easy to moderate to difficult (I don’t need them to be in order of ascending frequency). I also would like a few more numbers on the y-axis.\nExercise 6: Sad Bar Chart\nLet’s now consider some research questions related to the quantitative elevation variable:\n\nAmong the hikes, what’s the range of elevation and how are the hikes distributed within this range (e.g. evenly, in clumps, “normally”)?\nWhat’s a typical elevation?\nAre there any outliers, i.e. hikes that have unusually high or low elevations?\n\nHere:\n\nConstruct a bar chart of the quantitative elevation variable.\nExplain why this might not be an effective visualization for this and other quantitative variables. (What questions does / doesn’t it help answer?)\n\nThis bar chart is an effective visualization to see whether there are peaks with the same elevation, but it does not show individual peaks, nor does it emphasize individual data points–the line is distracting… could have done better with a point. Hard to see where they clump. There is not an average line to compare the data with, which would demonstrate typical elevation.\n\nggplot(hikes, aes(x = elevation)) +\n  geom_bar(fill = \"purple\")  +\n  labs(x = \"Elevation\", y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\nExercise 7: A Histogram of Elevation\nQuantitative variables require different viz than categorical variables. Especially when there are many possible outcomes of the quantitative variable. It’s typically insufficient to simply count up the number of times we’ve observed a particular outcome as the bar graph did above. It gives us a sense of ranges and typical outcomes, but not a good sense of how the observations are distributed across this range. We’ll explore two methods for graphing quantitative variables: histograms and density plots.\nHistograms are constructed by (1) dividing up the observed range of the variable into ‘bins’ of equal width; and (2) counting up the number of cases that fall into each bin. Check out the example below:\n\nPart a\nLet’s dig into some details.\n\nHow many hikes have an elevation between 4500 and 4700 feet? ~6 hikes\nHow many total hikes have an elevation of at least 5100 feet? ~2\nPart b\nNow the bigger picture. In general, histograms allow us to examine the following properties of a quantitative variable:\n\n\ntypical outcome: Where’s the center of the data points? What’s typical?\n\nvariability & range: How spread out are the outcomes? What are the max and min outcomes?\n\nshape: How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\n\noutliers: Are there any outliers, i.e. outcomes that are unusually large/small?\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize below what you learned from the histogram, in context.\nThe typical elevation of the hikes in the Adirondacks is roughly 4300 but the most common elevation is 4000 ft. The minimum outcome is ~3750 ft and the maximum elevation is 5500 ft.The graph seems to be skewed right. Outliers may exist in hikes above 5100 ft.\nExercise 8: Building Histograms - Part 1\n2-MINUTE CHALLENGE: Thinking of the bar chart code, try to intuit what line you can tack on to the below frame of elevation to add a histogram layer. Don’t forget a +. If it doesn’t come to you within 2 minutes, no problem – all will be revealed in the next exercise.\n\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"pink\", fill = \"purple\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nExercise 9: Building Histograms - Part 2\nLet’s build some histograms. Try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\nExercise 10: Histogram Follow-up\n\nWhat function added the histogram layer / geometry?\n\ngeom_histogram\n\nWhat’s the difference between color and fill?\n\ncolor is thr outline, and fill is the color within the bars\n\nWhy does adding color = \"white\" improve the visualization?\n\nBecause we are able to distinguish between the different bars (otherwise it becomes a blob)\n\nWhat did binwidth do?\n\nBinwidth changes the size of the bars (the range of elevation that we are counting the hikes in)\n\nWhy does the histogram become ineffective if the binwidth is too big (e.g. 1000 feet)?\n\nEncapsulates too much of the data set (no patterns can be seen)\n\nWhy does the histogram become ineffective if the binwidth is too small (e.g. 5 feet)?\n\nIt becomes a bar chart again! We cannot see any significant patterns because the bars are too skinny and the array is too limited.\nExercise 11: Density Plots\nDensity plots are essentially smooth versions of the histogram. Instead of sorting observations into discrete bins, the “density” of observations is calculated across the entire range of outcomes. The greater the number of observations, the greater the density! The density is then scaled so that the area under the density curve always equals 1 and the area under any fraction of the curve represents the fraction of cases that lie in that range.\nCheck out a density plot of elevation. Notice that the y-axis (density) has no contextual interpretation – it’s a relative measure. The higher the density, the more common are elevations in that range.\n\nggplot(hikes, aes(x = elevation)) +\n  geom_density()\n\n\n\n\n\n\n\nQuestions\n\n\nINTUITION CHECK: Before tweaking the code and thinking back to geom_bar() and geom_histogram(), how do you anticipate the following code will change the plot?\n\ngeom_density(color = \"blue\")\ngeom_density(fill = \"orange\")\n\n\nTRY IT! Test out those lines in the chunk below. Was your intuition correct?\n\n\nggplot(hikes, aes(x = elevation)) +\ngeom_density(color = \"blue\", fill = \"orange\")\n\n\n\n\n\n\n\n\nExamine the density plot. How does it compare to the histogram? What does it tell you about the typical elevation, variability / range in elevations, and shape of the distribution of elevations within this range?\n\nWe get a more complete breakdown of the density of elevations. I.e. how many hikes at each elevation. More clearly shows the skew of the plot and potential outliers.\nExercise 12: Density Plots vs Histograms\nThe histogram and density plot both allow us to visualize the behavior of a quantitative variable: typical outcome, variability / range, shape, and outliers. What are the pros/cons of each? What do you like/not like about each?\nI like the smooth look of the density plot… it lets us see the skew more clearly, but I think that it could be more clear to talk about frequency of hikes.\nExercise 13: Code = communication\nWe obviously won’t be done until we talk about communication. All code above has a similar general structure (where the details can change):\n\nggplot(___, aes(x = ___)) + \n  geom___(color = \"___\", fill = \"___\") + \n  labs(x = \"___\", y = \"___\")\n\n\nThough not necessary to the code working, it’s common, good practice to indent or tab the lines of code after the first line (counterexample below). Why?\n\n\n# YUCK\nggplot(hikes, aes(x = elevation)) +\ngeom_histogram(color = \"white\", binwidth = 200) +\nlabs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\nThough not necessary to the code working, it’s common, good practice to put a line break after each + (counterexample below). Why?\n\n\n# YUCK \nggplot(hikes, aes(x = elevation)) + geom_histogram(color = \"white\", binwidth = 200) + labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\nExercise 14: Practice\nPart a\nPractice your viz skills to learn about some of the variables in one of the following datasets from the previous class:\n\n# Data on students in this class\nsurvey &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\n# World Cup data\nworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\n\n# Load the package\nlibrary(tidyverse)\n\nggplot(survey, aes(x = hangout)) + \n  geom_bar(color = \"blue\", fill = \"pink\") + \n  labs(x = \"spot\", y = \"frequency\")\n\n\n\n\n\n\n\nPart b\nCheck out the RStudio Data Visualization cheat sheet to learn more features of ggplot.\nWhen done, don’t forgot to click Render Book and check the resulting HTML files. If happy, jump to GitHub Desktop and commit the changes with the message Finish activity 3 and push to GitHub. Wait few seconds, then visit your portfolio website and make sure the changes are there.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n7  Bivariate Viz\n",
    "section": "",
    "text": "Use this file for practice with the bivariate viz in-class activity. Refer to the class website for details.\n\n8 Import data\n\nsurvey &lt;- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\") \n\n\n9 How many students have now filled out the survey?\n\n10 hmmm… nope!\nhead(survey) #did that work? I think so. nrow(survey)\n\n11 What type of variables do we have?\n\nclass (survey)\n\n[1] \"data.frame\"\n\nmode(survey) \n\n[1] \"list\"\n\ntypeof(survey)\n\n[1] \"list\"\n\nstr(survey)\n\n'data.frame':   28 obs. of  4 variables:\n $ cafe_mac         : chr  \"Cheesecake\" \"Cheese pizza\" \"udon noodles\" \"egg rolls\" ...\n $ minutes_to_campus: int  15 10 4 7 5 35 5 15 7 20 ...\n $ fave_temp        : num  18 24 18 10 18 7 75 24 13 16 ...\n $ hangout          : chr  \"the mountains\" \"a beach\" \"the mountains\" \"a beach\" ...\n\n\n\n12 Attach a package needed to use the ggplot function\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n13 Make a ggplot for hangouts\n\n#Making a ggplot for hangout\nggplot (survey, aes (x=hangout))+\ngeom_bar(color = \"blue\", fill = \"dark blue\")+\nlabs(x= \"Location\", y = \"# of Responses\")\n\n\n\n\n\n\n\n\n14 Make a ggplot for temperatures\n\nggplot (survey, aes (x=fave_temp))+\ngeom_histogram(color = \"blue\", fill = \"dark blue\")+\nlabs(x= \"Location\", y = \"# of Responses\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nggplot (survey, aes (x=fave_temp))+\ngeom_density(color = \"blue\", fill = \"dark blue\")+\nlabs(x= \"Location\", y = \"# of Responses\")\n\n\n\n\n\n\n\n\ndata.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))\n\n  temp_3pm temp_9am\n1       24       14\n2       26       18\n3       20       15\n4       15       13\n5       15       11\n6       15       11\n\n\n\nweather &lt;- data.frame(temp_3pm = c(24, 26, 20, 15, 15, 0, 40, 60, 57, 44, 51, 75),\n                      location = rep(c(\"A\", \"B\"), each = 6))\nweather\n\n   temp_3pm location\n1        24        A\n2        26        A\n3        20        A\n4        15        A\n5        15        A\n6         0        A\n7        40        B\n8        60        B\n9        57        B\n10       44        B\n11       51        B\n12       75        B\n\n\n\nggplot(weather, aes(x = temp_3pm)) +\n      geom_density()\n\n\n\n\n\n\n\n\nweather &lt;- data.frame(rain_today = c(\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"no\", \"yes\"),\n                        location = c(rep(\"A\", 7), rep(\"B\", 5)))\n    weather\n\n   rain_today location\n1          no        A\n2          no        A\n3          no        A\n4          no        A\n5         yes        A\n6          no        A\n7         yes        A\n8          no        B\n9         yes        B\n10        yes        B\n11         no        B\n12        yes        B\n\n\n\nggplot(weather, aes(x = location)) +\n      geom_bar()\n\n\n\n\n\n\n\n\n# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\n\n15 Exercise 0\n\nggplot(elections, aes(x = winner_20)) + \n  geom_bar(color = \"blue\", fill = \"pink\") + \n  labs(x = \"Party\", y = \"Vote Count\")\n\n\n\n\n\n\n\n\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_histogram(color = \"blue\", fill = \"pink\") + \n  labs(x = \"Party\", y = \"Vote Count\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n#Exercise 1\n\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\n#For scatter plots, there is a y and x term defined.\n\n\n# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\n\n\n# Change the shape of the points\n# What happens if you change the shape to another number?\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 2)\n\n\n\n\n\n\n# Changing the number of the shape term will change the shape of the points (two is triangle, ten is some weird bulls eye thing)\n\n\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n\n\n\n\n\n\n#color is helpful, fill is not.\n\n\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")+\n  geom_text(aes(label = state_abbr))\n\n\n\n\n\n\n\n#Exercise 3: Reflect\nStrong positive linear correlation indicating that there is a strong relationship between the way a county votes from one election year to the next.\nThere seems to be a few outliers in Texas… although it is hard to see on this very crowded graph.\n#Exercise 4: Visualizing trend\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n#Exercise 5: Your Turn\nTo examine how the 2020 results are related to some county demographics, construct scatterplots of repub_pct_20 vs median_rent, and repub_pct_20 vs median_age. Summarize the relationship between these two variables and comment on which is the better predictor of repub_pct_20, median_rent or median_age.\n\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThere is a fair negative linear relationship between median rent and percent of republican vote. This could indicate that with higher rents, there is less of a tendency to vote Republican.\n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes(y = repub_pct_20, x = median_age)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThis visualization shows a poor positive linear relationship between age and Republican vote, indicating that age may not be a good predictor for political voting.\n#Exercise 6: A Sad Scatterplot\nNext, let’s explore the relationship between a county’s 2020 Republican support repub_pct_20 and the historical political trends in its state. In this case repub_pct_20 is quantitative, but historical is categorical. Explain why a scatterplot might not be an effective visualization for exploring this relationship. (What questions does / doesn’t it help answer?)\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n\n\n\n\n\n\n\nThis graph shows that there is a wide spread of percentage of republican voting in counties that are historically blue, purple, and red, with a very slight dominance in red counties.\n#Exercise 7: Quantitative vs Categorical – Violins & Boxes\nThough the above scatterplot did group the counties by historical category, it’s nearly impossible to pick out meaningful patterns in 2020 Republican support in each category. Let’s try adding 2 different geom layers to the frame:\n\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n\n\n\n\n\n\n\nFrom the above plots, I can surmise that there is a higher median of percent Republican votes in red counties, and that that pattern steadily decreases from red to purple to blue. There is a sharp buldge in red counties for ~75% of votes to be Republican.\n#Exercise 8: Quantitative vs Categorical – Intuition Check\nWe can also visualize the relationship between repub_pct_20 and historical using our familiar density plots. In the plot below, notice that we simply created a separate density plot for each historical category. (The plot itself is “bad” but we’ll fix it below.) Try to adjust the code chunk below, which starts with a density plot of repub_pct_20 alone, to re-create this image.\n\nggplot(elections, aes(x = repub_pct_20)) +\n  geom_density()\n\n\n\n\n\n\n\nHm… I have no idea how to adjust the code. Three minutes are up! HMMM IT WAS JUST ADDING FILL? WUT.\n#Exercise 9: Quantitative vs Categorical – Density Plots\n\n# Name two \"bad\" things about this plot\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n\n\n\n\n\n\nThe overlap is very confusing and I am not sure where the counties come into play…\n\n# What does scale_fill_manual do?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\n\n\n\n**scale_fill_manual seems to change the colors of the scale based on categorical values.\n\n# What does alpha = 0.5 do?\n# Play around with different values of alpha, between 0 and 1\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.2) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n\n\n\n\n\n\n“Alpha = some number” seems to adjust transparency. With 0 being translucent and 1 being opaque.\n\n# What does facet_wrap do?!\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n\n\n\n\n\n\n\n“facet_wrap” separates each of the categorical values and places them side by side.\n\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nThis is terrible because the colors suuuuck but also because I still don’t understand the county breakdown and it’s hard to see how blue compares with purple, etc except to say that red is the predominant predictor (sometimes… it’s confusing).\n#Exercise 10\nWe’ve now learned 3 (of many) ways to visualize the relationship between a quantitative and categorical variable: side-by-side violins, boxplots, and density plots.\nWhich do you like best? I like boxplots, but maybe that’s just because I have had the most exposure to them.\nWhat is one pro of density plots relative to boxplots? Pros include better side by side comparison, clearer outline of where density is at it’s max.\nWhat is one con of density plots relative to boxplots? Hard to see the spread, ie maximums and minimums are a bit convoluted in the violin plots\n#Exercise 11: Categorical vs Categorical – Intuition Check\nFinally, let’s simply explore who won each county in 2020 (winner_20) and how this breaks down by historical voting trends in the state. That is, let’s explore the relationship between 2 categorical variables! Following the same themes as above, we can utilize grouping features such as fill/color or facets to distinguish between different categories of winner_20 and historical.\n\n# Plot 1: adjust this to recreate the top plot\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()+\n  scale_fill_manual(values = c(\"blue\", \"red\"))\n\n\n\n\n\n\n\n\n# Plot 2: adjust this to recreate the bottom plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar()+\n  facet_wrap(~historical)\n\n\n\n\n\n\n\n#Exercise 12: Categorical vs Categorical Construct the following 4 bar plot visualizations.\n\n# A stacked bar plot\n# How are the \"historical\" and \"winner_20\" variables mapped to the plot, i.e. what roles do they play?\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n\n\n\n\n\n\n\n\n# A side-by-side bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\n# A proportional bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n#Part a Name one pro and one con of using the “proportional bar plot” instead of one of the other three options.\n#Part b What’s your favorite bar plot from part and why?\n#Exercise 13: Practice (now or later) Import some daily weather data from a few locations in Australia:\n\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\nConstruct plots that address the research questions in each chunk. You might make multiple plots–there are many ways to do things!. However, don’t just throw spaghetti at the wall.\nReflect before doing anything. What types of variables are these? How might you plot just 1 of the variables, and then tweak the plot to incorporate the other?\n\n# How do 3pm temperatures (temp3pm) differ by location?\n# In answering this question we have two variables, one numeric and one categorical. Therefore it is probably best to have either boxplots, violin plots, or a stacked density plot. \n\n#density plot\nggplot(weather, aes(x = temp3pm, fill = location)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"pink\", \"purple\",\"green\"))+\n    facet_wrap(~ location)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\nggplot(weather, aes(y = temp3pm, x = location)) +\n  geom_violin(fill = \"pink\")\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\n#Similar to the early exercises, we could make a scatter plot and fit it with a line of best fit. \nggplot(weather, aes(y = temp3pm, x = temp9am)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 27 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x = location, fill = raintoday)) + \n  geom_bar()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n8  Mulivariate Viz\n",
    "section": "",
    "text": "8.1 Review\nLet’s review some univariate and bivariate plotting concepts using some daily weather data from Australia. This is a subset of the data from the weatherAUS data in the rattle package.\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Import data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\n# What are the units of observation?\nhead(weather)\n\n        date   location mintemp maxtemp rainfall evaporation sunshine\n1 2020-01-01 Wollongong    17.1    23.1        0          NA       NA\n2 2020-01-02 Wollongong    17.7    24.2        0          NA       NA\n3 2020-01-03 Wollongong    19.7    26.8        0          NA       NA\n4 2020-01-04 Wollongong    20.4    35.5        0          NA       NA\n5 2020-01-05 Wollongong    19.8    21.4        0          NA       NA\n6 2020-01-06 Wollongong    18.3    22.9        0          NA       NA\n  windgustdir windgustspeed winddir9am winddir3pm windspeed9am windspeed3pm\n1         SSW            39        SSW        SSE           20           15\n2         SSW            37          S        ENE           13           15\n3          NE            41        NNW        NNE            7           17\n4         SSW            78         NE        NNE           15           17\n5         SSW            57        SSW          S           31           35\n6          NE            35        ESE         NE           17           20\n  humidity9am humidity3pm pressure9am pressure3pm cloud9am cloud3pm temp9am\n1          69          64      1014.9      1014.0        8        1    19.1\n2          72          54      1020.1      1017.7        7        1    19.8\n3          72          71      1017.5      1013.0        6       NA    23.4\n4          77          69      1008.8      1003.9       NA       NA    24.5\n5          70          75      1018.9      1019.9       NA        7    20.7\n6          71          71      1021.2      1018.2       NA       NA    20.9\n  temp3pm raintoday risk_mm raintomorrow\n1    22.9        No     0.0           No\n2    23.6        No     0.0           No\n3    25.7        No     0.0           No\n4    26.7        No     0.0           No\n5    20.0        No     0.0           No\n6    22.6        No     0.8           No\n\n# How many data points do we have? \nnrow(weather)\n\n[1] 2367\n\n# What type of variables do we have?\nstr(weather)\n\n'data.frame':   2367 obs. of  24 variables:\n $ date         : Date, format: \"2020-01-01\" \"2020-01-02\" ...\n $ location     : chr  \"Wollongong\" \"Wollongong\" \"Wollongong\" \"Wollongong\" ...\n $ mintemp      : num  17.1 17.7 19.7 20.4 19.8 18.3 19.9 20.1 19.8 20.5 ...\n $ maxtemp      : num  23.1 24.2 26.8 35.5 21.4 22.9 25.6 23.2 23.1 25.4 ...\n $ rainfall     : num  0 0 0 0 0 0 0.8 1.6 0 0 ...\n $ evaporation  : num  NA NA NA NA NA NA NA NA NA NA ...\n $ sunshine     : num  NA NA NA NA NA NA NA NA NA NA ...\n $ windgustdir  : chr  \"SSW\" \"SSW\" \"NE\" \"SSW\" ...\n $ windgustspeed: int  39 37 41 78 57 35 44 41 39 56 ...\n $ winddir9am   : chr  \"SSW\" \"S\" \"NNW\" \"NE\" ...\n $ winddir3pm   : chr  \"SSE\" \"ENE\" \"NNE\" \"NNE\" ...\n $ windspeed9am : int  20 13 7 15 31 17 30 31 24 19 ...\n $ windspeed3pm : int  15 15 17 17 35 20 7 33 26 39 ...\n $ humidity9am  : int  69 72 72 77 70 71 76 77 76 79 ...\n $ humidity3pm  : int  64 54 71 69 75 71 72 76 79 76 ...\n $ pressure9am  : num  1015 1020 1018 1009 1019 ...\n $ pressure3pm  : num  1014 1018 1013 1004 1020 ...\n $ cloud9am     : int  8 7 6 NA NA NA NA 8 NA NA ...\n $ cloud3pm     : int  1 1 NA NA 7 NA NA NA NA NA ...\n $ temp9am      : num  19.1 19.8 23.4 24.5 20.7 20.9 22.9 21.3 21.2 23 ...\n $ temp3pm      : num  22.9 23.6 25.7 26.7 20 22.6 24.9 22.2 22.2 25.1 ...\n $ raintoday    : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ risk_mm      : num  0 0 0 0 0 0.8 1.6 0 0 1 ...\n $ raintomorrow : chr  \"No\" \"No\" \"No\" \"No\" ...",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#review",
    "href": "ica/ica-multi.html#review",
    "title": "\n8  Mulivariate Viz\n",
    "section": "",
    "text": "Example 1\nConstruct a plot that allows us to examine how temp3pm varies.\n\nggplot(weather, aes(y = temp3pm, x = location)) +\n  geom_violin()\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\nggplot(weather, aes(x = temp3pm)) +\n  geom_density() \n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 2\nConstruct 3 plots that address the following research question:\nHow do afternoon temperatures (temp3pm) differ by location?\n\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm)) + \n  geom_density()\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) +\n  geom_violin()\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n# Plot 3 (facets)\nggplot(weather, aes(x = temp3pm, fill = location)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ location)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nReflection\n\nTemperatures tend to be highest, and most variable, in Uluru. There, they range from ~10 to ~45 with a typical temp around ~30 degrees.\nTemperatures tend to be lowest in Hobart. There, they range from ~5 to ~45 with a typical temp around ~15 degrees.\nWollongong temps are in between and are the least variable from day to day.\n\nSUBTLETIES: Defining fill or color by a variable\nHow we define the fill or color depends upon whether we’re defining it by a named color or by some variable in our dataset. For example:\n\ngeom___(fill = \"blue\")named colors are defined outside the aesthetics and put in quotes\ngeom___(aes(fill = variable)) or ggplot(___, aes(fill = variable))\ncolors/fills defined by a variable are defined inside the aesthetics\nExample 3\nLet’s consider Wollongong alone:\n\n# Don't worry about the syntax (we'll learn it soon)\nwoll &lt;- weather |&gt;\n  filter(location == \"Wollongong\") |&gt; \n  mutate(date = as.Date(date))  \n\n\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday))+\n  geom_bar(fill = \"blue\")\n\n\n\n\n\n\n\n\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday))+\ngeom_bar(aes(fill = raintomorrow))\n\n\n\n\n\n\n\n\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\nReflection\nThere’s often not one “best plot”, but a combination of plots that provide a complete picture:\n\nThe stacked and side-by-side bars reflect that on most days, it does not rain.\nThe proportional / filled bars lose that information, but make it easier to compare proportions: it’s more likely to rain tomorrow if it also rains today.\nExample 4\nConstruct a plot that illustrates how 3pm temperatures (temp3pm) vary by date in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.\n\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\n\nggplot(woll, aes(y = temp3pm, x = date)) +\n  geom_point() +\n  geom_smooth(span = 0.5)\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 18 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\n\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_line()\n\n\n\n\n\n\n\nNOTE: A line plot isn’t always appropriate! It can be useful in situations like this, when our data are chronological.\nReflection\nThere’s a seasonal / cyclic behavior in temperatures – they’re highest in January (around 23 degrees) and lowest in July (around 16 degrees). There are also some outliers – some abnormally hot and cold days.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#new-stuff",
    "href": "ica/ica-multi.html#new-stuff",
    "title": "\n8  Mulivariate Viz\n",
    "section": "\n8.2 New Stuff",
    "text": "8.2 New Stuff\nNext, let’s consider the entire weather data for all 3 locations. The addition of location adds a 3rd variable into our research questions:\n\nHow does the relationship between raintoday and raintomorrow vary by location?\nHow does the behavior of temp3pm over date vary by location?\nAnd so on.\n\nThus far, we’ve focused on the following components of a plot:\n\nsetting up a frame\n\nadding layers / geometric elements\nsplitting the plot into facets for different groups / categories\nchange the theme, e.g. axis labels, color, fill\n\nWe’ll have to think about all of this, along with scales. Scales change the color, fill, size, shape, or other properties according to the levels of a new variable. This is different than just assigning scale by, for example, color = \"blue\".\nWork on the examples below in your groups. Check in with your intuition! We’ll then discuss as a group as relevant.\nExample 5\n\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am)) + \n  geom_point()+\n  geom_text(aes(label = location))\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_text()`).\n\n\n\n\n\n\n\n\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() +\n  facet_wrap(~ raintoday)\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n\nWarning: Removed 69 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExample 6\n\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n\n\n\n\n\n\n\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n\n\n\n\n\n\n\nExample 7\n\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") +\n  facet_wrap(~ location)\n\n\n\n\n\n\n\nThere’s no end to the number and type of visualizations you could make. And it’s important to not just throw spaghetti at the wall until something sticks. FlowingData shows that one dataset can be visualized many ways, and makes good recommendations for data viz workflow, which we modify and build upon here:\n\nIdentify simple research questions.\nWhat do you want to understand about the variables or the relationships among them?\n\nStart with the basics and work incrementally.\n\nIdentify what variables you want to include in your plot and what structure these have (eg: categorical, quantitative, dates)\nStart simply. Build a plot of just 1 of these variables, or the relationship between 2 of these variables.\nSet up a plotting frame and add just one geometric layer at a time.\nStart tweaking: add whatever new variables you want to examine,\n\n\n\nAsk your plot questions.\n\nWhat questions does your plot answer? What questions are left unanswered by your plot?\nWhat new questions does your plot spark / inspire?\nDo you have the viz tools to answer these questions, or might you learn more?\n\n\nFocus.\nReporting a large number of visualizations can overwhelm the audience and obscure your conclusions. Instead, pick out a focused yet comprehensive set of visualizations.\n\n:::",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercises-required",
    "href": "ica/ica-multi.html#exercises-required",
    "title": "\n8  Mulivariate Viz\n",
    "section": "\n8.3 Exercises (required)",
    "text": "8.3 Exercises (required)\nThe story\nThough far from a perfect assessment of academic preparedness, SAT scores have historically been used as one measurement of a state’s education system. The education dataset contains various education variables for each state:\n\n# Import and check out data\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\nA codebook is provided by Danny Kaplan who also made these data accessible:\n\nExercise 1: SAT scores\nPart a\nConstruct a plot of how the average sat scores vary from state to state. (Just use 1 variable – sat not State!)\n\nggplot(education, aes(x = sat)) + \n  geom_density()\n\n\n\n\n\n\n\nPart b\nSummarize your observations from the plot. Comment on the basics: range, typical outcomes, shape. (Any theories about what might explain this non-normal shape?)\nThere is a broad range of scores from 850 to a little past 1100. Most scores are around 900, with another lesser maximum density at 1050. And the shape is non-normal. \nExercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries\nThe first question we’d like to answer is: Can the variability in sat scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (expend) and typical teacher salary?\nPart a\n\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\n\nggplot(education, aes(y = sat, x = expend)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\n\nggplot(education, aes(y = sat, x = salary)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nPart b\nWhat are the relationship trends between SAT scores and spending? Is there anything that surprises you?\nIn both of the above plots we see a very loose decrease SAT scores in spending and salary. While this was initially a surprising result, I realized that the relationship is not strong, making me question whether this is a significant relationship.\nExercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries\nConstruct one visualization of the relationship of sat with salary and expend. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!\n\nggplot(education, aes(y = sat, x = salary, color = expend)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\nExercise 4: Another way to Incorporate Scale\nIt can be tough to distinguish color scales and size scales for quantitative variables. Another option is to discretize a quantitative variable, or basically cut it up into categories.\nConstruct the plot below. Check out the code and think about what’s happening here. What happens if you change “2” to “3”?\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\nDescribe the trivariate relationship between sat, salary, and expend.\nIt seems like there is limited relationship between a higher salary and sat scores. However, in schools that have low salaries, we see a sharp decrease in sat scores as expenditures increase. In schools with high salaries, there is a slight upward trend with increasing expenditures leading to increased sat scores.\nExercise 5: Finally an Explanation\nIt’s strange that SAT scores seem to decrease with spending. But we’re leaving out an important variable from our analysis: the fraction of a state’s students that actually take the SAT. The fracCat variable indicates this fraction: low (under 15% take the SAT), medium (15-45% take the SAT), and high (at least 45% take the SAT).\nPart a\nBuild a univariate viz of fracCat to better understand how many states fall into each category.\n\nggplot(education, aes(x = fracCat)) +\n  geom_bar() \n\n\n\n\n\n\n\nPart b\nBuild 2 bivariate visualizations that demonstrate the relationship between sat and fracCat. What story does your graphic tell and why does this make contextual sense?\n\nggplot(education, aes(y = sat)) +\n  geom_boxplot() +\n  facet_wrap (~fracCat)\n\n\n\n\n\n\n\n\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n\n\n\n\n\n\n\nPart c\nMake a trivariate visualization that demonstrates the relationship of sat with expend AND fracCat. Highlight the differences in fracCat groups through color AND unique trend lines. What story does your graphic tell?\nDoes it still seem that SAT scores decrease as spending increases?\n\nggplot(education, aes(y = sat, x = expend, color = fracCat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nPart d\nPutting all of this together, explain this example of Simpson’s Paradox. That is, why did it appear that SAT scores decrease as spending increases even though the opposite is true?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercises-optional",
    "href": "ica/ica-multi.html#exercises-optional",
    "title": "\n8  Mulivariate Viz\n",
    "section": "\n8.4 Exercises (optional)",
    "text": "8.4 Exercises (optional)\nExercise 6: Heat Maps\nAs usual, we’ve only just scratched the surface! There are lots of other data viz techniques for exploring multivariate relationships. Let’s start with a heat map.\nPart a\nRun the chunks below. Check out the code, but don’t worry about every little detail! NOTES:\n\nThis is not part of the ggplot() grammar, making it a bit complicated.\nIf you’re curious about what a line in the plot does, comment it out (#) and check out what happens!\nIn the plot, for each state (row), each variable (column) is scaled to indicate whether the state has a relative high value (yellow), a relatively low value (purple), or something in between (blues/greens).\nYou can also play with the color scheme. Type ?cm.colors in the console to learn about various options.\nWe’ll improve the plot later, so don’t spend too much time trying to learn something from this plot.\n\n\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data &lt;- education |&gt; \n  column_to_rownames(\"State\") |&gt; \n  data.matrix() |&gt; \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\n\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\n\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\nPart b\nIn the final two plots, the states (rows) are rearranged by similarity with respect to these education metrics. The final plot includes a dendrogram which further indicates clusters of similar states. In short, states that have a shorter path to connection are more similar than others.\nPutting this all together, what insight do you gain about the education trends across U.S. states? Which states are similar? In what ways are they similar? Are there any outliers with respect to 1 or more of the education metrics?\nExercise 7: Star plots\nLike heat maps, star plots indicate the relative scale of each variable for each state. Thus, we can use star maps to identify similar groups of states, and unusual states!\nPart a\nConstruct and check out the star plot below. Note that each state has a “pie”, with each segment corresponding to a different variable. The larger a segment, the larger that variable’s value is in that state. For example:\n\nCheck out Minnesota. How does Minnesota’s education metrics compare to those in other states? What metrics are relatively high? Relatively low?\nWhat states appear to be similar? Do these observations agree with those that you gained from the heat map?\n\n\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n\nPart b\nFinally, let’s plot the state stars by geographic location! What new insight do you gain here?!\n\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#solutions",
    "href": "ica/ica-multi.html#solutions",
    "title": "\n8  Mulivariate Viz\n",
    "section": "\n8.5 Solutions",
    "text": "8.5 Solutions\n\nClick for Solutions\n\nlibrary(tidyverse)\n\n# Import data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\n# What are the units of observation?\nhead(weather)\n\n        date   location mintemp maxtemp rainfall evaporation sunshine\n1 2020-01-01 Wollongong    17.1    23.1        0          NA       NA\n2 2020-01-02 Wollongong    17.7    24.2        0          NA       NA\n3 2020-01-03 Wollongong    19.7    26.8        0          NA       NA\n4 2020-01-04 Wollongong    20.4    35.5        0          NA       NA\n5 2020-01-05 Wollongong    19.8    21.4        0          NA       NA\n6 2020-01-06 Wollongong    18.3    22.9        0          NA       NA\n  windgustdir windgustspeed winddir9am winddir3pm windspeed9am windspeed3pm\n1         SSW            39        SSW        SSE           20           15\n2         SSW            37          S        ENE           13           15\n3          NE            41        NNW        NNE            7           17\n4         SSW            78         NE        NNE           15           17\n5         SSW            57        SSW          S           31           35\n6          NE            35        ESE         NE           17           20\n  humidity9am humidity3pm pressure9am pressure3pm cloud9am cloud3pm temp9am\n1          69          64      1014.9      1014.0        8        1    19.1\n2          72          54      1020.1      1017.7        7        1    19.8\n3          72          71      1017.5      1013.0        6       NA    23.4\n4          77          69      1008.8      1003.9       NA       NA    24.5\n5          70          75      1018.9      1019.9       NA        7    20.7\n6          71          71      1021.2      1018.2       NA       NA    20.9\n  temp3pm raintoday risk_mm raintomorrow\n1    22.9        No     0.0           No\n2    23.6        No     0.0           No\n3    25.7        No     0.0           No\n4    26.7        No     0.0           No\n5    20.0        No     0.0           No\n6    22.6        No     0.8           No\n\n# How many data points do we have? \nnrow(weather)\n\n[1] 2367\n\n# What type of variables do we have?\nstr(weather)\n\n'data.frame':   2367 obs. of  24 variables:\n $ date         : Date, format: \"2020-01-01\" \"2020-01-02\" ...\n $ location     : chr  \"Wollongong\" \"Wollongong\" \"Wollongong\" \"Wollongong\" ...\n $ mintemp      : num  17.1 17.7 19.7 20.4 19.8 18.3 19.9 20.1 19.8 20.5 ...\n $ maxtemp      : num  23.1 24.2 26.8 35.5 21.4 22.9 25.6 23.2 23.1 25.4 ...\n $ rainfall     : num  0 0 0 0 0 0 0.8 1.6 0 0 ...\n $ evaporation  : num  NA NA NA NA NA NA NA NA NA NA ...\n $ sunshine     : num  NA NA NA NA NA NA NA NA NA NA ...\n $ windgustdir  : chr  \"SSW\" \"SSW\" \"NE\" \"SSW\" ...\n $ windgustspeed: int  39 37 41 78 57 35 44 41 39 56 ...\n $ winddir9am   : chr  \"SSW\" \"S\" \"NNW\" \"NE\" ...\n $ winddir3pm   : chr  \"SSE\" \"ENE\" \"NNE\" \"NNE\" ...\n $ windspeed9am : int  20 13 7 15 31 17 30 31 24 19 ...\n $ windspeed3pm : int  15 15 17 17 35 20 7 33 26 39 ...\n $ humidity9am  : int  69 72 72 77 70 71 76 77 76 79 ...\n $ humidity3pm  : int  64 54 71 69 75 71 72 76 79 76 ...\n $ pressure9am  : num  1015 1020 1018 1009 1019 ...\n $ pressure3pm  : num  1014 1018 1013 1004 1020 ...\n $ cloud9am     : int  8 7 6 NA NA NA NA 8 NA NA ...\n $ cloud3pm     : int  1 1 NA NA 7 NA NA NA NA NA ...\n $ temp9am      : num  19.1 19.8 23.4 24.5 20.7 20.9 22.9 21.3 21.2 23 ...\n $ temp3pm      : num  22.9 23.6 25.7 26.7 20 22.6 24.9 22.2 22.2 25.1 ...\n $ raintoday    : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ risk_mm      : num  0 0 0 0 0 0.8 1.6 0 0 1 ...\n $ raintomorrow : chr  \"No\" \"No\" \"No\" \"No\" ...\n\n\nExample 1\n\nggplot(weather, aes(x = temp3pm)) + \n  geom_density()\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 2\n\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n# Plot 3 (facets)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ location)\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 3\n\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(fill = \"blue\")\n\n\n\n\n\n\n\n\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(aes(fill = raintomorrow))\n\n\n\n\n\n\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\nExample 4\n\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_point() + \n  geom_smooth(span = 0.5)\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 18 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_line()\n\n\n\n\n\n\n\nExample 5\n\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() +\n  facet_wrap(~ raintoday)\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n\nWarning: Removed 69 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExample 6\n\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n\n\n\n\n\n\n\nExample 7\n\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n\n\n\n\n\n\n\nExercise 1: SAT scores\nPart a\n\n# A histogram would work too!\nggplot(education, aes(x = sat)) + \n  geom_density()\n\n\n\n\n\n\n\nPart b\naverage SAT scores range from roughly 800 to 1100. They appear bi-modal.\nExercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries\nPart a\n\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = salary)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nPart b\nThe higher the student expenditures and teacher salaries, the worse the SAT performance.\nExercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries\n\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\nExercise 4: Another Way to Incorporate Scale\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nStates with lower salaries and expenditures tend to have higher SAT scores.\nExercise 5: Finally an Explanation\nPart a\n\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n\n\n\n\n\n\n\nPart b\nThe more students in a state that take the SAT, the lower the average scores tend to be. This is probably related to self-selection.\n\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n\n\n\n\n\n\n\nPart c\nWhen we control for the fraction of students that take the SAT, SAT scores increase with expenditure.\n\nggplot(education, aes(y = sat, x = expend, color = fracCat)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nPart d\nStudent participation tends to be lower among states with lower expenditures (which are likely also the states with higher ed institutions that haven’t historically required the SAT). Those same states tend to have higher SAT scores because of the self-selection of who participates.\nExercise 6: Heat Maps\nPart a\n\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data &lt;- education |&gt; \n  column_to_rownames(\"State\") |&gt; \n  data.matrix() |&gt; \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\n\n\n\n\n\n\n\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\n\n\n\n\n\n\n\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n\n\n\n\n\n\n\nPart b\n\nSimilar values in verbal, math, and sat.\nHigh contrast (an inverse relationship) verbal/math/sat scores and the fraction of students that take the SAT.\nOutliers of Utah and California in ratio (more students per teacher).\nWhile grouped, fraction and salary are not as similar to each other as the sat scores; it is also interesting to notice states that have high ratios have generally low expenditures per student.\nExercise 7: Star Plots\nPart a\nMN is high on the SAT performance related metrics and low on everything else. MN is similar to Iowa, Kansas, Mississippi, Missouri, the Dakotas…\n\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n\n\n\n\n\n\n\nPart b\nWhen the states are in geographical ordering, we’d notice more easily that states in similar regions of the U.S. have similar patterns of these variables.\n\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "\n9  Spatial Viz\n",
    "section": "",
    "text": "9.1 Review\nIn the previous activity, we explored a Simpson’s Paradox–it seemed that - states with higher spending… - tend to have lower average SAT scores.\nBUT this was explained by a confounding (aka omitted and lurking) variable which is the % of students in a state that take the SAT. Hence,\nThus, when controlling for the % of students that take the SAT, more spending is correlated with higher scores.\nLet’s explore a Simpson’s paradox related to Mac!\nBack in the 2000s, Macalester invested in insulating a few campus-owned houses, with the hopes of leading to energy savings.  Former Mac Prof Danny Kaplan accessed monthly data on energy use and other info for these addresses, before and after renovations:\n# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ purrr::map()    masks maps::map()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Import the data and only keep 2 addresses\nenergy &lt;- read.csv(\"https://mac-stat.github.io/data/MacNaturalGas.csv\") |&gt; \n  mutate(date = as.Date(paste0(month, \"/1/\", year), \"%m/%d/%Y\")) |&gt; \n  filter(address != \"c\")\n\n# Check it out\nhead(energy)\n\n  month year  price therms hdd address renovated       date\n1     6 2005  35.21     21   0       a        no 2005-06-01\n2     7 2005  37.37     21   0       a        no 2005-07-01\n3     8 2005  36.93     21   3       a        no 2005-08-01\n4     9 2005  62.36     39  61       a        no 2005-09-01\n5    10 2005 184.15    120 416       a        no 2005-10-01\n6    11 2005 433.35    286 845       a        no 2005-11-01\nThe part of dataset codebook is below:",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#review",
    "href": "ica/ica-spatial.html#review",
    "title": "\n9  Spatial Viz\n",
    "section": "",
    "text": "States with higher spending…\ntend to have a higher % of students of students that take the SAT…\nwhich then “leads to” lower average SAT scores.\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nmeaning\n\n\n\ntherms\na measure of energy use–the more energy used, the larger the therms\n\n\naddress\na or b\n\n\nrenovated\nwhether the location had been renovated, yes or no\n\n\nmonth\nfrom 1 (January) to 12 (December)\n\n\nhdd\nmonthly heating degree days. A proxy measure of outside temperatures–the higher the hdd, the COLDER it was outside",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#examples",
    "href": "ica/ica-spatial.html#examples",
    "title": "\n9  Spatial Viz\n",
    "section": "\n9.2 Examples",
    "text": "9.2 Examples\n\nConstruct a plot that addresses each research question\nInclude a 1-sentence summary of the plot.\n\nExample 1\nWhat was range in, and typical, energy used each month, as measured by therms? How does this differ by address?\nThere is a wide variety in each plot. In month 3 (March), for example, there is a range from about 200 to 400. However, in month 7 (July) there is a significantly smaller range from 0-50. Typical energy use varies greatly by month. \n\nggplot(energy, aes(x = therms, fill = address)) + \n  geom_density(alpha = 0.5)\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 2\nHow did energy use (therms) change over time (date) at the two addresses?\nThere is a slight increase in energy usage at both addresses over time.\n\nggplot(energy, aes(y = therms, x = date, color = address)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 12 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExample 3\nHow did the typical energy use (therms) at the two addresses change before and after they were renovated?\n\nggplot(energy, aes(y = therms, x = renovated, color = renovated))+\n  geom_boxplot()+\n  facet_wrap(~address)\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nExample 4\nThat seems unfortunate that energy usage went up after renovations. But also fishy.\nTake 5 minutes in your groups to try and explain what’s going on here. Think: What confounding, lurking, or omitted variable related to energy usage are we ignoring here? Try to make some plots to prove your point.\n\nggplot(energy, aes(y = therms, x = hdd, color = renovated))+\n  geom_boxplot()\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nExample 5\nLet’s summarize the punchlines by filling in the ???. It seemed that:\n\nAfter renovation…\nenergy use increased.\n\nBUT this was explained by a confounding or omitted or lurking variable: ???\n\nAfter renovation…\ntherms increased at both addresses\nwhich then leads to higher energy use.\n\nThus, when controlling for hdd, renovations led to decreased energy use.\n\n# When controlling for outside temps (via hdd), energy use decreased post-renovation\nggplot(energy, aes(y = therms, x = hdd, color = renovated)) + \n  geom_point(alpha = 0.5) + \n  geom_smooth(method = \"lm\", se = FALSE) + \n  facet_wrap(~ address)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 12 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#new-stuff",
    "href": "ica/ica-spatial.html#new-stuff",
    "title": "\n9  Spatial Viz\n",
    "section": "\n9.3 New stuff",
    "text": "9.3 New stuff\nTypes of spatial viz:\n\nPoint Maps: plotting locations of individual observations\nexample: bigfoot sightings\nContour Maps: plotting the density or distribution of observations (not the individual observations themselves)\n\nChoropleth Maps: plotting outcomes in different regions\n\nNYT article on effects of redlining\nMinnesota Reformer article on how Mpls / St Paul voted on 2021 ballot measures related to mayoral, policing, and rent policies\n\n\n\nThese spatial maps can be static or dynamic/interactive.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercises",
    "href": "ica/ica-spatial.html#exercises",
    "title": "\n9  Spatial Viz\n",
    "section": "\n9.4 Exercises",
    "text": "9.4 Exercises\n\n9.4.1 Preview\nYou’ll explore some R spatial viz tools below. In general, there are two important pieces to every map:\nPiece 1: A dataset\nThis dataset must include either:\n\nlocation coordinates for your points of interest (for point maps); or\nvariable outcomes for your regions of interest (for choropleth maps)\n\nPiece 2: A background map\nWe need latitude and longitude coordinates to specify the boundaries for your regions of interest (eg: countries, states). This is where it gets really sticky!\n\nCounty-level, state-level, country-level, continent-level info live in multiple places.\nWhere we grab this info can depend upon whether we want to make a point map or a choropleth map. (The background maps can be used somewhat interchangeably, but it requires extra code :/)\nWhere we grab this info can also depend upon the structure of our data and how much data wrangling / cleaning we’re up for. For choropleth maps, the labels of regions in our data must match those in the background map. For example, if our data labels states with their abbreviations (eg: MN) and the background map refers to them as full names in lower case (eg: minnesota), we have to wrangle our data so that it matches the background map.\n\nIn short, the code for spatial viz gets very specialized. The goal of these exercises is to:\n\nplay around and experience the wide variety of spatial viz tools out there\nunderstand the difference between point maps and choropleth maps\nhave fun\n\nYou can skip around as you wish and it’s totally fine if you don’t finish everything. Just come back at some point to play around.\nPart 1: Interactive points on a map with leaflet\n\nLeaflet is an open-source JavaScript library for creating maps. We can use it inside R through the leaflet package.\nThis uses a different plotting framework than ggplot2, but still has a tidyverse feel (which will become more clear as we learn other tidyverse tools!).\nThe general steps are as follows:\n\nCreate a map widget by calling leaflet() and telling it the data to use.\nAdd a base map using addTiles() (the default) or addProviderTiles().\nAdd layers to the map using layer functions (e.g. addMarkers(), addPolygons()).\nPrint the map widget to display it.\nExercise 1: A leaflet with markers / points\nEarlier this semester, I asked for the latitude and longitude of one of your favorite places. I rounded these to the nearest whole number, so that they’re near to but not exactly at those places. Let’s load the data and map it!\n\nfave_places &lt;- read.csv(\"https://ajohns24.github.io/data/112/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       46      -123\n2       33        52\n3       48       -90\n4       36      -112\n5       59        25\n6       39      -106\n\n\nPart a\nYou can use a “two-finger scroll” to zoom in and out.\n\n# Load the leaflet package\nlibrary(leaflet)\n\n# Just a plotting frame\nleaflet(data = fave_places)\n\n\n\n\n\n\n# Now what do we have?\nleaflet(data = fave_places) |&gt; \n  addTiles()\n\n\n\n\n\n\n# Now what do we have?\n# longitude and latitude refer to the variables in our data\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers(lng = ~longitude, lat = ~latitude)\n\n\n\n\n\n\n# Since we named them \"longitude\" and \"latitude\", the function\n# automatically recognizes these variables. No need to write them!\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addMarkers()\n\n\n\n\n\nPart b\nPLAY AROUND! This map is interactive. Zoom in on one location. Keep zooming – what level of detail can you get into? How does that detail depend upon where you try to zoom in (thus what are the limitations of this tool)?\nExercise 2: Details\nWe can change all sorts of details in leaflet maps.\n\n# Load package needed to change color\nlibrary(gplots)\n\n# We can add colored circles instead of markers at each location\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"red\"))\n\n\n\n\n\n\n# We can change the background\n# Mark locations with yellow dots\n# And connect the dots, in their order in the dataset, with green lines\n# (These green lines don't mean anything here, but would if this were somebody's travel path!)\nleaflet(data = fave_places) |&gt;\n  addProviderTiles(\"USGS\") |&gt;\n  addCircles(weight = 10, opacity = 1, color = col2hex(\"yellow\")) |&gt;\n  addPolylines(\n    lng = ~longitude,\n    lat = ~latitude,\n    color = col2hex(\"green\")\n  )\n\n\n\n\n\nIn general:\n\naddProviderTiles() changes the base map.\nTo explore all available provider base maps, type providers in the console. (Though some don’t work :/)\n\nUse addMarkers() or addCircles() to mark locations. Type ?addControl into the console to pull up a help file which summarizes the aesthetics of these markers and how you can change them. For example:\n\n\nweight = how thick to make the lines, points, pixels\n\nopacity = transparency (like alpha in ggplot2)\ncolors need to be in “hex” form. We used the col2hex() function from the gplots library to do that\n\n\nExercise 3: Your turn\nThe starbucks data, compiled by Danny Kaplan, contains information about every Starbucks in the world at the time the data were collected, including Latitude and Longitude:\n\n# Import starbucks location data\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\nLet’s focus on only those in Minnesota for now:\n\n# Don't worry about the syntax\nstarbucks_mn &lt;- starbucks |&gt;   \n  filter(Country == \"US\", State.Province == \"MN\")\n\nCreate a leaflet map of the Starbucks locations in Minnesota. Keep it simple – go back to Exercise 1 for an example.\n\nleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"darkgreen\"))\n\nAssuming \"Longitude\" and \"Latitude\" are longitude and latitude, respectively\n\n\n\n\n\n\nPart 2: Static points on a map\nLeaflet is very powerful and fun. But:\n\nIt’s not great when we have lots of points to map – it takes lots of time.\nIt makes good interactive maps, but we often need a static map (eg: we can not print interactive maps!).\n\nLet’s explore how to make point maps with ggplot(), not leaflet().\nExercise 3: A simple scatterplot\nLet’s start with the ggplot() tools we already know. Construct a scatterplot of all starbucks locations, not just those in Minnesota, with:\n\nLatitude and Longitude coordinates (which goes on the y-axis?!)\nMake the points transparent (alpha = 0.2) and smaller (size = 0.2)\n\nIt’s pretty cool that the plots we already know can provide some spatial context. But what don’t you like about this plot?\nThe plot doesn’t give me relative context, and the dots are too small for me to really see any overlap.\n\nggplot(starbucks, aes(x = Longitude, y = Latitude)) +\n  geom_point(alpha = 0.2, size = 0.2) \n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExercise 4: Adding a country-level background\nLet’s add a background map of country-level boundaries.\nPart a\nFirst, we can grab country-level boundaries from the rnaturalearth package.\n\n# Load the package\nlibrary(rnaturalearth)\n\n# Get info about country boundaries across the world\n# in a \"sf\" or simple feature format\nworld_boundaries &lt;- ne_countries(returnclass = \"sf\")\n\nIn your console, type world_boundaries to check out what’s stored there. Don’t print it our in your Rmd – printing it would be really messy there (even just the head()).\nPart b\nRun the chunks below to build up a new map.\n\n# What does this code produce?\n# What geom are we using for the point map?\nggplot(world_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Load package needed to change map theme\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following object is masked from 'package:ggthemes':\n\n    theme_map\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\n# Add a point for each Starbucks\n# NOTE: The Starbucks info is in our starbucks data, not world_boundaries\n# How does this change how we use geom_point?!\nggplot(world_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3, size = 0.2, color = \"darkgreen\"\n  ) +\n  theme_map()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nPart c\nSummarize what you learned about Starbucks from this map.\nThere is a Starbucks in every continent except for Antarctica, with an obvious concentration in the United States and Western Europe.\nExercise 5: Zooming in on some countries\nInstead of world_boundaries &lt;- ne_countries(returnclass = 'sf') we could zoom in on…\n\nthe continent of Africa: ne_countries(continent = 'Africa', returnclass = 'sf')\n\na set of countries: ne_countries(country = c('france', 'united kingdom', 'germany'), returnclass = 'sf')\n\nboundaries within a country: ne_states(country = 'united states of america', returnclass = 'sf')\n\n\nOur goal here will be to map the Starbucks locations in Canada, Mexico, and the US.\nPart a\nTo make this map, we again need two pieces of information.\n\nData on Starbucks for only Canada, Mexico, and the US, labeled as “CA”, “MX”, “US” in the starbucks data.\n\n\n# We'll learn this syntax soon! Don't worry about it now.\nstarbucks_cma &lt;- starbucks |&gt; \n  filter(Country %in% c('CA', 'MX', 'US'))\n\n\nA background map of state- and national-level boundaries in Canada, Mexico, and the US. This requires ne_states() in the rnaturalearth package where the countries are labeled ‘canada’, ‘mexico’, ‘united states of america’.\n\n\ncma_boundaries &lt;- ne_states(\n  country = c(\"canada\", \"mexico\", \"united states of america\"),\n  returnclass = \"sf\")\n\nPart b\nMake the map!\n\n# Just the boundaries\nggplot(cma_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Add the points\n# And zoom in\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50)) +\n  theme_map()\n\n\n\n\n\n\n\nExercise 6: A state and county-level map\nLet’s get an even higher resolution map of Starbucks locations within the states of Minnesota, Wisconsin, North Dakota, and South Dakota, with a background map at the county-level.\nPart a\nTo make this map, we again need two pieces of information.\n\nData on Starbucks for only the states of interest.\n\n\nstarbucks_midwest &lt;- starbucks |&gt; \n  filter(State.Province %in% c(\"MN\", \"ND\", \"SD\", \"WI\"))\n\n\nA background map of state- and county-level boundaries in these states. This requires st_as_sf() in the sf package, and map() in the maps package, where the countries are labeled ‘minnesota’, ‘north dakota’, etc.\n\n\n# Load packages\nlibrary(sf)\nlibrary(maps)\n\n# Get the boundaries\nmidwest_boundaries &lt;- st_as_sf(\n  maps::map(\"county\",\n            region = c(\"minnesota\", \"wisconsin\", \"north dakota\", \"south dakota\"), \n            fill = TRUE, plot = FALSE))\n\n# Check it out\nhead(midwest_boundaries)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.81268 ymin: 45.05167 xmax: -93.01397 ymax: 48.53526\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n                                     ID                           geom\nminnesota,aitkin       minnesota,aitkin MULTIPOLYGON (((-93.03689 4...\nminnesota,anoka         minnesota,anoka MULTIPOLYGON (((-93.51817 4...\nminnesota,becker       minnesota,becker MULTIPOLYGON (((-95.14537 4...\nminnesota,beltrami   minnesota,beltrami MULTIPOLYGON (((-95.58655 4...\nminnesota,benton       minnesota,benton MULTIPOLYGON (((-93.77027 4...\nminnesota,big stone minnesota,big stone MULTIPOLYGON (((-96.10794 4...\n\n\nPart b\nAdjust the code below to make the plot! Remove the # to run it.\n\nggplot(midwest_boundaries) + \n   geom_sf() + \n   geom_point(\n     data = starbucks_midwest,\n     aes(x = Longitude, y = Latitude),\n     alpha = 0.7,\n     size = 0.2, \n     color = 'darkgreen'\n ) + \n   theme_map()\n\n\n\n\n\n\n\nExercise 7: Contour maps\nEspecially when there are lots of point locations, and those locations start overlapping on a map, it can be tough to visualize areas of higher density. Consider the Starbucks locations in Canada, Mexico, and the US that we mapped earlier:\n\n# Point map (we made this earlier)\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\n\n\n\n\n\n\nNow check out the contour map.\n\n# What changed in the plot? Instead of points, there are now radiating rings. \n# What changed in our code?! Instead of geom_point we are using geom_density_2d\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\nPart 3: Choropleth maps\nSpatial data isn’t always in the form of point locations! For example, recall the state and county-level data on presidential elections.\n\nelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nIn these datasets, we’re interested in the overall election outcome by region (state or county), not the specific geographic location of some observation. Let’s wrangle our data first. We’ll focus on just a few variables of interest, and create a new variable (repub_20_categories) that discretizes the repub_pct_20 variable into increments of 5 percentage points (for states) or 10 percentage points (for counties):\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties_Republican &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\nExercise 8: State-level choropleth maps\nLet’s map the 2020 Republican support in each state, repub_pct_20.\nPart a\nWe again need two pieces of information.\n\nData on elections in each state, which we already have: elections_by_state.\nA background map of state boundaries in the US. The boundaries we used for point maps don’t work here. (Optional detail: they’re sf objects and we now need a data.frame object.) Instead, we can use the map_data() function from the ggplot2 package:\n\n\n# Get the latitude and longitude coordinates of state boundaries\nstates_map &lt;- map_data(\"state\")\n\n# Check it out\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\n\n\n9.4.1.1 Pause\nImportant detail: Note that the region variable in states_map, and the state_name variable in elections_by_state both label states by the full name in lower case letters. This is critical to the background map and our data being able to communicate.\n\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\nhead(elections_by_state) \n\n   state_name state_abbr repub_pct_20 repub_20_categories\n1     alabama         AL        62.03               60-64\n2    arkansas         AR        62.40               60-64\n3     arizona         AZ        49.06               45-49\n4  california         CA        34.33               30-34\n5    colorado         CO        41.90               40-44\n6 connecticut         CT        39.21               35-39\n\n\n\n9.4.1.2 Part b\nNow map repub_pct_20 by state.\n\n# Note where the dataset, elections_by_state, is used. It is being used in the first unit of the ggplot().\n# Note where the background map, states_map, is used. Background map is being used in geom_map.\n\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() \n\n\n\n\n\n\n\n\n# Make it nicer! We are adding a gradient here. \nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_gradientn(name = \"% Republican\", colors = c(\"blue\", \"purple\", \"red\"), values = scales::rescale(seq(0, 100, by = 5)))\n\n\n\n\n\n\n\nIt’s not easy to get fine control over the color scale for the quantitative repub_pct_20 variable. Instead, let’s plot the discretized version, repub_20_categories:\n\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map()\n\n\n\n\n\n\n\n\n# Load package needed for refining color palette\nlibrary(RColorBrewer)\n\n# Now fix the colors\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\n9.4.1.3 Part c\nWe can add other layers, like points, on top of a choropleth map. Add a Starbucks layer! Do you notice any relationship between Starbucks and elections? Or are we just doing things at this point? ;)\n\n# Get only the starbucks data from the US\nstarbucks_us &lt;- starbucks |&gt; \n  filter(Country == \"US\")\n\n# Map it\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  geom_point(\n    data = starbucks_us,\n    aes(x = Longitude, y = Latitude),\n    size = 0.05,\n    alpha = 0.2,\n    inherit.aes = FALSE\n  ) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\nDetails (if you’re curious)\n\n\nmap_id is a required aesthetic for geom_map().\n\nIt specifies which variable in our dataset indicates the region (here state_name).\nIt connects this variable (state_name) to the region variable in our mapping background (states_map). These variables must have the same possible outcomes in order to be matched up (alabama, alaska, arizona,…).\n\n\n\nexpand_limits() assures that the map covers the entire area it’s supposed to, by pulling longitudes and latitudes from the states_map.\nPart d\nWe used geom_sf() for point maps. What geom do we use for choropleth maps?\nExercise 9: County-level choropleth maps\nLet’s map the 2020 Republican support in each county.\nPart a\nWe again need two pieces of information.\n\nData on elections in each county, which we already have: elections_by_county.\nA background map of county boundaries in the US, stored in the county_map dataset in the socviz package:\n\n\n# Get the latitude and longitude coordinates of county boundaries\nlibrary(socviz)\ndata(county_map) \n\n# Check it out\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\n\n\n9.4.1.4 Pause\nImportant detail: We officially have a headache. Our county_map refers to each county by a 5-number id. Our elections_by_counties data refers to each county by a county_fips code, which is mostly the same as id, BUT drops any 0’s at the beginning of the code.\n\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\nhead(elections_by_counties)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n\nThis just means that we have to wrangle the data so that it can communicate with the background map.\n\n# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\n\n9.4.1.5 Part b\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\nNow map Republican support by county. Let’s go straight to the discretized repub_20_categories variable, and a good color scale.\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = repub_20_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()\n\n\n\n\n\n\n\n\n9.4.2 Exercise 10: Play around!\nConstruct county-level maps of median_rent and median_age.\n\nggplot(elections_by_counties, aes(median_age))+\ngeom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n# Map it\n# Note where the dataset, elections_by_state, is used. It is being used in the first unit of the ggplot().\n# Note where the background map, states_map, is used. Background map is being used in geom_map.\n\nelections_by_counties_median_age &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(median_age_categories = \n           cut(median_age, \n               breaks = seq(20, 80, by = 10),\n               include.lowest = TRUE))\n\nggplot(elections_by_counties_median_age, aes(map_id = county_fips, fill = median_age_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"Median Age\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()\n\n\n\n\n\n\n\nExercise 11: Choropleth maps with leaflet\nThough ggplot() is often better for this purpose, we can also make choropleth maps with leaflet(). If you’re curious, check out the leaflet documentation:\nhttps://rstudio.github.io/leaflet/choropleths.html",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#solutions",
    "href": "ica/ica-spatial.html#solutions",
    "title": "\n9  Spatial Viz\n",
    "section": "\n9.5 Solutions",
    "text": "9.5 Solutions\n\nClick for Solutions\nExample 1\nBoth addresses used between 0 and 450 therms per month. There seem to be two types of months – those with lower use around 50 therms and those with higher use around 300/400 therms.\n\nggplot(energy, aes(x = therms, fill = address)) + \n  geom_density(alpha = 0.5)\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 2\nEnergy use is seasonal, with higher usage in winter months. It seems that address a uses slightly more energy.\n\nggplot(energy, aes(y = therms, x = date, color = address)) + \n  geom_point()\n\nWarning: Removed 12 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\nggplot(energy, aes(y = therms, x = date, color = address)) + \n  geom_line()\n\n\n\n\n\n\n\nExample 3\nAt both addresses, typical energy use increased after renovations.\n\nggplot(energy, aes(y = therms, x = renovated)) + \n  geom_boxplot() + \n  facet_wrap(~ address)\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n# A density plot isn't very helpful for comparing typical therms in this example!\nggplot(energy, aes(x = therms, fill = renovated)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ address)\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\nExample 4\nlurking variable = outdoor temperature (as reflected by hdd)\n\n# It happened to be colder outside after renovations (higher hdd)\nggplot(energy, aes(y = hdd, x = renovated)) + \n  geom_boxplot() + \n  facet_wrap(~ address)\n\n\n\n\n\n\n# When controlling for outside temps (via hdd), energy use decreased post-renovation\nggplot(energy, aes(y = therms, x = hdd, color = renovated)) + \n  geom_point(alpha = 0.5) + \n  geom_smooth(method = \"lm\", se = FALSE) + \n  facet_wrap(~ address)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 12 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 12 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExample 5\nBUT this was explained by a confounding or omitted or lurking variable: hdd (outdoor temperature)\n\nAfter renovation…\n\nit happened to be colder…\nwhich then leads to higher energy use.\n\nThus, when controlling for outdoor temps, renovations led to decreased energy use.\nExercise 3: Your turn\n\nleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addMarkers()\n\nAssuming \"Longitude\" and \"Latitude\" are longitude and latitude, respectively\n\n\n\n\n\n\nExercise 3: A simple scatterplot\nIt would be nice to also have some actual reference maps of countries in the background.\n\nggplot(starbucks, aes(y = Latitude, x = Longitude)) + \n  geom_point(size = 0.5)\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nExercise 6: A state and county-level map\nPart b\nAdjust the code below to make the plot! Remove the # to run it.\n\nggplot(midwest_boundaries) +\n  geom_sf() +\n  geom_point(\n    data = starbucks_midwest,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.7,\n    size = 0.2,\n    color = 'darkgreen'\n  ) +\n  theme_map()\n\n\n\n\n\n\n\nExercise 7: Contour maps\nEspecially when there are lots of point locations, and those locations start overlapping on a map, it can be tough to visualize areas of higher density. Consider the Starbucks locations in Canada, Mexico, and the US that we mapped earlier:\n\n# Point map (we made this earlier)\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\n\n\n\n\n\n\nNow check out the contour map.\n\n# What changed in the plot?\n# What changed in our code?!\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\n\n\n\n\n\n\nExercises Part 3: Choropleth maps\nSpatial data isn’t always in the form of point locations! For example, recall the state and county-level data on presidential elections.\n\nelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nIn these datasets, we’re interested in the overall election outcome by region (state or county), not the specific geographic location of some observation. Let’s wrangle our data first.\nWe’ll focus on just a few variables of interest, and create a new variable (repub_20_categories) that discretizes the repub_pct_20 variable into increments of 5 percentage points (for states) or 10 percentage points (for counties):\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\n# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\nExercise 8: State-level choropleth maps\nPart d\ngeom_map()\nExercise 10: Play around!\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() + \n  scale_fill_gradientn(name = \"median rent\", colors = c(\"white\", \"lightgreen\", \"darkgreen\"))\n\n\n\n\n\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_age)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() + \n  scale_fill_gradientn(name = \"median age\", colors = terrain.colors(10))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  }
]